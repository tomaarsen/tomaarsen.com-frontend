
// This file was autogenerated.

let ids = ["nltk.util.bigrams", "nltk.util.parallelize_preprocess", "nltk.tbl.Template.expand", "nltk.sentiment.util.mark_negation", "nltk.tokenize.destructive", "nltk.tag.stanford.tag", "nltk.sem.relextract.extract_rels", "nltk.sem.logic.TypeResolutionException", "nltk.metrics.scores.recall", "nltk.ccg.combinator.BackwardComposition", "nltk.corpus.reader.xmldocs.XMLCorpusView.__init__", "nltk.sem.root_semrep", "nltk.tokenize.casual.EMOTICON_RE.search", "nltk.sem.logic.ComplexType.__hash__", "nltk.tokenize.api", "nltk.chat.suntsu", "nltk.tag.brill.BrillTagger", "nltk.classify.BinaryMaxentFeatureEncoding.train", "nltk.inference.prover9.Prover9Command", "nltk.chunk.tree2conllstr", "nltk.classify.maxent.TadmMaxentClassifier", "nltk.sem.logic.Tokens.TOKENS", "nltk.corpus.wordnet.of2ss", "nltk.probability.SimpleGoodTuringProbDist", "nltk.corpus.ptb.tagged_sents", "nltk.ccg.api.Direction", "nltk.tokenize.treebank.TreebankWordDetokenizer", "nltk.sem.is_rel", "nltk.book.text3.count", "nltk.corpus.masc_tagged", "nltk.util.LazyMap", "nltk.tag.util.untag", "nltk.EarleyChartParser", "nltk.tag.stanford.StanfordPOSTagger", "nltk.corpus.machado",  "nltk.parse.LeftCornerChartParser", "nltk.featstruct.FeatStructParser", "nltk.parse.TD_STRATEGY", "nltk.collocations", "nltk.translate.bleu_score.nltk", "nltk.grammar", "nltk.compat.unquote_plus", "nltk.corpus.stopwords.add", "nltk.tokenize.casual.WORD_RE.findall", "nltk.parse.bllip.BllipParser.from_unified_model_dir", "nltk.parse.featurechart.InstantiateVarsChart", "nltk.chat.iesha.iesha_chatbot", "nltk.inference", "nltk.corpus.brown.ensure_loaded", "nltk.tokenize.util.align_tokens", "nltk.corpus.udhr", "nltk.treeprettyprinter", "nltk.probability.ConditionalProbDistI", "nltk.sem.logic.LogicParser", "nltk.stem.snowball.EnglishStemmer", "nltk.corpus.brown.encoding", "nltk.parse.FeatureEarleyChartParser", "nltk.ccg.chart.insert", "nltk.corpus.reader.plaintext.PlaintextCorpusReader", "nltk.chunk.util.tree2conlltags", "nltk.featstruct.FeatStruct", "nltk.tag.hmm._market_hmm_example", "nltk.corpus.reader.nombank.NombankSplitTreePointer", "nltk.tokenize.texttiling.TextTilingTokenizer", "nltk.corpus.machado.words", "nltk.grammar.PCFG.fromstring", "nltk.tokenize.casual.TweetTokenizer", "nltk.tbl.rule", "nltk.corpus.wordnet.ss2of",  "nltk.compat.HTTPPasswordMgrWithDefaultRealm", "nltk.lm.vocabulary", "nltk.compat.int2byte", "nltk.tokenize.punkt.PunktWordTokenizer", "nltk.sem.linearlogic.UnificationException", "nltk.twitter.api.TweetHandlerI.do_continue", "nltk.twitter.util", "nltk.inference.resolution", "nltk.tokenize.regexp.WordPunctTokenizer", "nltk.lm.models.KneserNeyInterpolated", "nltk.tokenize._treebank_word_tokenizer", "nltk.corpus.masc_tagged.words", "nltk.tag.senna.SennaTagger", "nltk.text.Text", "nltk.chat.eliza", "nltk.util.ingrams", "nltk.ccg.lexicon.set_entries", "nltk.corpus.stopwords.readme", "nltk.compat.imap", "nltk.corpus.semcor.tagged_sents", "nltk.corpus.reader.nombank", "nltk.data.path.insert", "nltk.corpus.wordnet_ic", "nltk.corpus.reader.ChunkedCorpusReader.tagged_sents", "nltk.cluster.gaac.GAAClusterer", "nltk.draw.cfg.CFGEditor", "nltk.chunk.util.conlltags2tree", "nltk.stemmer", "nltk.corpus.reader.conll.ConllChunkCorpusReader", "nltk.corpus.reader.framenet.AttrDict", "nltk.word_tokenize.synset", "nltk.book.text6", "nltk.downloader.Downloader", "nltk.tag.sequential.SequentialBackoffTagger.__init__", "nltk.test.util", "nltk.featstruct.find_variables", "nltk.grammar.Nonterminal", "nltk.sentiment.vader.negated", "nltk.corpus.names.abspath", "nltk.compat.build_opener", "nltk.lm.counter", "nltk.classify.decisiontree.DecisionTreeClassifier", "nltk.tokenize.SExprTokenizer", "nltk.stem.snowball.ItalianStemmer", "nltk.translate.bleu_score._modified_precision", "nltk.tokenize.toktok.ToktokTokenizer", "nltk.grammar.FeatureGrammar", "nltk.KneserNeyProbDist", "nltk.tag.perceptron.PerceptronTagger.__init__", "nltk.util.everygrams", "nltk.tag.brill.ProximateTagsRule", "nltk.corpus.europarl_raw.german.raw", "nltk.test.doctest_nose_plugin", "nltk.compat.ProxyHandler", "nltk.tag.brill.Pos", "nltk.lm.smoothing.AbsoluteDiscounting", "nltk.corpus.ieer.fileids", "nltk.util.binary_search_file", "nltk.tag.hunpos", "nltk.test.tokenizer", "nltk.tag.NgramTagger", "nltk.translate.gleu_score", "nltk.collocations.QuadgramAssocMeasures", "nltk.corpus.gutenberg.readme", "nltk.classify.maxent.MaxentClassifier.train", "nltk.translate.IBMModel.MIN_PROB", "nltk.sem.drt.AbstractDrs", "nltk.corpus.europarl_raw.german", "nltk.classify.megam.config_megam", "nltk.re.split", "nltk.twitter.TweetWriter", "nltk.PropertyIndirectionI", "nltk.cluster.util.Dendrogram", "nltk.lemmer", "nltk.token", "nltk.sem.linearlogic.ApplicationExpression", "nltk.corpus.reader.wordnet.ADJ", "nltk.parse.chart.TreeEdge.__init__", "nltk.corpus.wordnet.ic", "nltk.text.ConcordanceIndex", "nltk.corpus.ppattach.attachments", "nltk.tokenize.stanford.StanfordTokenizer", "nltk.classify.MaxentClassifier.ALGORITHMS", "nltk.stem.util", "nltk.corpus.propbank", "nltk.sem.logic.EqualityExpression", "nltk.compat.xrange", "nltk.sem.logic._counter", "nltk.parse.corenlp.CoreNLPParser", "nltk.corpus.wordnet.synset_from_pos_and_offset", "nltk.corpus.brown.readme", "nltk.stem.snowball.DanishStemmer", "nltk.maxent", "nltk.tag.sequential.DefaultTagger", "nltk.sem.logic.ExpectedMoreTokensException", "nltk.parse.pchart.RandomChartParser", "nltk.draw.util.MutableOptionMenu", "nltk.corpus.reader.ConllChunkCorpusReader.__init__", "nltk.corpus.europarl_raw.spanish", "nltk.parse.chart.ChartParser", "nltk.util.in_idle", "nltk.align", "nltk.ccg.combinator.BackwardBx", "nltk.metrics.TrigramAssocMeasures", "nltk.tag.stanford.POSTagger.parse_output", "nltk.data.replace", "nltk.ccg.api.CCGVar.reset_id", "nltk.corpus.sentiwordnet.senti_synset", "nltk.tokenize.mwe.MWETokenizer", "nltk.stem.lancaster.LancasterStemmer", "nltk.classify.util.accuracy", "nltk.draw.util.SequenceWidget", "nltk.internals.find_jar", "nltk.translate.IBMModel4.model4_prob_t_a_given_s", "nltk.corpus.subjectivity.categories", "nltk.parse.pchart.UnsortedChartParser", "nltk.tokenize.util.string_span_tokenize", "nltk.corpus.cmudict.entries", "nltk.tokenize.casual", "nltk.test.token", "nltk.compat.get_im_class", "nltk.help.load", "nltk.sentiment.util.EMOTICON_RE.findall", "nltk.corpus.conll2002", "nltk.word_", "nltk.draw.srparser.demo", "nltk.test.doctest_nose_plugin.DoctestFix", "nltk.draw.util.SymbolWidget", "nltk.corpus.senseval.instances", "nltk.corpus.framenet.frames", "nltk.sem.logic.ANY_TYPE", "nltk.corpus.subjectivity", "nltk.tokenizer", "nltk.classifier.accuracy", "nltk.corpus.VerbnetCorpusReader", "nltk.ccg.chart.parses", "nltk.probability.ImmutableProbabilisticMixIn.__init__", "nltk.parse.chart.LeafInitRule", "nltk.featstruct.FeatStruct.__hash__", "nltk.probability.ProbDistI", "nltk.sem.parse_valuation", "nltk.corpus.verbnet.classids", "nltk.featstruct.TYPE", "nltk.sem.drt.DrtOrExpression", "nltk.twitter.api", "nltk.six.add_metaclass", "nltk.collocations.TrigramCollocationFinder.from_words", "nltk.test.parser", "nltk.tag.hmm", "nltk.translate.StackDecoder", "nltk.metrics.aline", "nltk.parse.chart.LeafEdge", "nltk.corpus.reader.plaintext.CategorizedPlaintextCorpusReader", "nltk.align.ibm2.IBMModel2", "nltk.corpus.words.add", "nltk.chunk.named_entity.NEChunkParserTagger", "nltk.re.MULTILINE", "nltk.metrics.segmentation", "nltk.corpus.reader.api.CorpusReader.__init__", "nltk.tag.sequential.NgramTagger", "nltk.tag.simplify", "nltk.tag.perceptron", "nltk.twitter.common.outf_writer_compat", "nltk.collocations.BigramAssocMeasures.likelihood_ratio", "nltk.corpus.lin_thesaurus.similarity", "nltk.sem.linearlogic.Expression.fromstring", "nltk.corpus.rte.fileids", "nltk.etree.ElementTree.ElementTree", "nltk.grammar.Production", "nltk.util.Trie", "nltk.util.elementtree_indent", "nltk.ccg.api", "nltk.corpus.nombank.nouns", "nltk.book.bigrams", "nltk.draw.table.Table", "nltk.sem.relextract.clause", "nltk.corpus.reader.util.read_regexp_block", "nltk.sem.linearlogic.Expression", "nltk.tag.senna.SennaNERTagger", "nltk.sem.logic", "nltk.classify.scikitlearn", "nltk.corpus.wordnet_ic.ic", "nltk.corpus.alpino", "nltk.translate.stack_decoder.StackDecoder", "nltk.corpus.indian.tagged_sents", "nltk.classify", "nltk.corpus.wordnet.wordnet_util.reorder_groups", "nltk.tag.senna.SennaChunkTagger", "nltk.featstruct.UnificationFailure", "nltk.metrics.aline.delta", "nltk.book.text5", "nltk.lm", "nltk.internals.is_writable", "nltk.parse.featurechart.FeatureEmptyPredictRule", "nltk.corpus.nps_chat.posts", "nltk.stemmer.StemmerI", "nltk.corpus.nps_chat.fileids", "nltk.parse.SteppingShiftReduceParser", "nltk.__maintainer__", "nltk.draw.util.EntryDialog", "nltk.corpus.semcor", "nltk.book.text3.collocations", "nltk.sem.chat80.sql_demo", "nltk.corpus.reader.wordlist.WordListCorpusReader", "nltk.probability.ImmutableProbabilisticMixIn", "nltk.corpus.comtrans", "nltk.lm.StupidBackoff", "nltk.tag.brill_trainer.BrillTaggerTrainer", "nltk.corpus.comtrans.words", "nltk.tag.senna", "nltk.translate.chrf_score.corpus_chrf", "nltk.util.ngrams.append", "nltk.grammar.read_grammar", "nltk.sem", "nltk.internals.find_file", "nltk.corpus.reuters.words", "nltk.tokenize.BlanklineTokenizer", "nltk.print_string", "nltk.sem.evaluate.Valuation", "nltk.metrics.association.BigramAssocMeasures", "nltk.corpus.wordnet.get_random_synset", "nltk.clify", "nltk.tag.api", "nltk.clify.accuracy", "nltk.corpus.reader.propbank", "nltk.parse.chart.BottomUpLeftCornerChartParser", "nltk.chunk.util.conllstr2tree", "nltk.corpus.swadesh", "nltk.sem.logic.EventVariableExpression", "nltk.corpus.webtext.open", "nltk.corpus.wordnet.lemmas", "nltk.corpus.reader.util.read_blankline_block", "nltk.translate.gleu_score.corpus_gleu", "nltk.parse.generate", "nltk.parse.EarleyChartParser", "nltk.compat.ProxyBasicAuthHandler", "nltk.corpus.framenet", "nltk.corpus.stopwords._fileids", "nltk.stem.WordNetLemmatizer.lemmatize", "nltk.translate.bleu_score", "nltk.data.path.append", "nltk.tag.simplify_indian_tag", "nltk.tree.immutable.ImmutableProbabilisticTree", "nltk.util.AbstractLazySequence", "nltk.sem.drt.DrtApplicationExpression", "nltk.parse.IncrementalBottomUpLeftCornerChartParser", "nltk.install", "nltk.classify.megam", "nltk.compat.TemporaryDirectory", "nltk.chunk.regexp.RegexpChunkRule.fromstring", "nltk.chunk", "nltk.data.show_cfg", "nltk.tree.Tree.collapse_unary", "nltk.parse.transitionparser", "nltk.book.text3.concordance", "nltk.translate.Alignment.fromstring", "nltk.corpus.cmudict.dict", "nltk.translate.bleu_score.corpus_bleu", "nltk.classify.rte_classify.rte_features", "nltk.tag.stanford.StanfordTagger", "nltk.inference.api.ProverCommandDecorator", "nltk.corpus.wordnet._unload", "nltk.translate.gdfa.grow_diag_final_and", "nltk.inference.tableau", "nltk.sem.logic.AllExpression", "nltk.stem.wordnet", "nltk.stem.snowball.NorwegianStemmer", "nltk.classify.util.names_demo", "nltk.corpus.ptb.parsed_sents", "nltk.translate.gdfa", "nltk.corpus.comparative_sentences.comparisons", "nltk.tag.hmm._log_add", "nltk.align.ibm2", "nltk.corpus.names.read", "nltk.corpus.europarl_raw.spanish.sents", "nltk.DependencyGraph.tree_labeled", "nltk.corpus.reuters.paras", "nltk.data.columns", "nltk.corpus.state_union.files", "nltk.corpus.udhr.fileids", "nltk.corpus.stopwords.__dict__.get", "nltk.corpus.subjectivity.words", "nltk.parse.chart.Chart.__init__", "nltk.corpus.reader.timit.TimitCorpusReader", "nltk.corpus.brown.tagged_words", "nltk.parse.ProjectiveDependencyParser", "nltk.corpus.wordnet.wordnet_util", "nltk.collocations.TrigramCollocationFinder", "nltk.util.OrderedDict", "nltk.corpus.reader.bracket_parse.BracketParseCorpusReader._parse", "nltk.stem.porter.PorterStemmer.MARTIN_EXTENSIONS", "nltk.treetransforms.collapse_unary", "nltk.wsd", "nltk.corpus.ptb.words", "nltk.corpus.reader.ConllCorpusReader.srl_instances", "nltk.corpus.comtrans.sents", "nltk.tokenize._treebank_word_tokenize", "nltk.parse.chart.BottomUpPredictRule", "nltk.chat", "nltk.draw.util.BoxWidget", "nltk.corpus.reader.SeekableUnicodeStreamReader", "nltk.corpus.wordnet.all_synsets", "nltk.corpus.sentence_polarity.sents", "nltk.parse.dependencygraph", "nltk.lm.vocabulary.Vocabulary", "nltk.classify.tadm.write_tadm_file", "nltk.corpus.shakespeare.fileids", "nltk.corpus.shakespeare", "nltk.draw.tree.tree_to_treesegment", "nltk.tag.hmm.HiddenMarkovModelTagger", "nltk.classify.PositiveNaiveBayesClassifier.train", "nltk.corpus.twitter_samples.abspath", "nltk.metrics.confusionmatrix", "nltk.NonprojectiveDependencyParser", "nltk.compat.htmlentitydefs.name2codepoint", "nltk.app.rdparser", "nltk.tokenize.destructive.MacIntyreContractions", "nltk.data.loc", "nltk.sem.logic.NegatedExpression", "nltk.sem.read_valuation", "nltk.corpus.brown.root", "nltk.parse.transitionparser.Transition.SHIFT", "nltk.draw.util.CanvasWidget.__getitem__", "nltk.compat.python_2_unicode_compatible", "nltk.tree.prettyprinter", "nltk.stem.wordnet.WordNetLemmatizer.__init__", "nltk.corpus.europarl_raw.italian", "nltk.tokenize.casual.remove_handles", "nltk.translate.api", "nltk.lm.api.Smoothing", "nltk.six.text_type", "nltk.corpus.product_reviews_1.reviews", "nltk.chunk.tagstr2tree", "nltk.corpus.wordnet.wordnet_util.split_and_clean_norm_entries", "nltk.tree.tree.Tree.fromstring", "nltk.cluster.kmeans", "nltk.tokenreader.TokenReaderI", "nltk.book.text3.findall", "nltk.corpus.reader.api.CorpusReader", "nltk.tree.immutable.ImmutableTree", "nltk.tree.parented.ParentedTree", "nltk.internals.compile_regexp_to_noncapturing", "nltk.probability.RandomProbDist", "nltk.corpus.opinion_lexicon", "nltk.internals.Deprecated", "nltk.translate.IBMModel3", "nltk.corpus.reader.timit.read_timit_block", "nltk.tag.Unigram", "nltk.corpus.reader.wordnet", "nltk.featstruct.FeatStructReader", "nltk.stem.snowball.SnowballStemmer.__init__", "nltk.corpus.senseval", "nltk.parse.transitionparser.Configuration", "nltk.tree.ParentedTree.convert", "nltk.parse.chart.TopDownPredictRule", "nltk.cluster.api.ClusterI", "nltk.parse.bllip.BllipParser", "nltk.parse.chart.demo_grammar", "nltk.tokenize.mwe", "nltk.corpus.treebank_raw.sents", "nltk.corpus.europarl_raw.french.abspath", "nltk.chunk.ChunkParserI.evaluate", "nltk.metrics.distance.jaccard_distance", "nltk.lm.preprocessing.padded_everygrams", "nltk.re_show", "nltk.RegexpTokenizer.span_tokenize", "nltk.grammar.nonterminals", "nltk.parse.viterbi.ViterbiParser", "nltk.corpus.brown.open", "nltk.corpus.reader.ConllCorpusReader.chunked_sents", "nltk.grammar.StatisticalDependencyGrammar", "nltk.maxent.ConditionalExponentialClassifier", "nltk.chunk.api.ChunkParserI", "nltk.cluster.em", "nltk.sem.evaluate.Error", "nltk.corpus.reader.ChunkedCorpusReader.chunked_sents", "nltk.cluster.api", "nltk.translate.IBMModel5", "nltk.internals.raise_unorderable_types", "nltk.parse.transitionparser.Transition.LEFT_ARC", "nltk.util.flatten", "nltk.probability.FreqDist.__init__", "nltk.etree.ElementTree.iselement", "nltk.probability.entropy", "nltk.parse.util.taggedsents_to_conll", "nltk.corpus.conll2000.chunked_words", "nltk.corpus.nombank.instances", "nltk.sem.glue.DrtGlue", "nltk.sentiment.vader.SentimentIntensityAnalyzer", "nltk.parse.transitionparser.TransitionParser", "nltk.re", "nltk.parser.stanford", "nltk.corpus.swadesh.fileids", "nltk.tgrep.tgrep_tokenize", "nltk.tokenize.regexp_tokenize", "nltk.corpus.nonbreaking_prefixes.words", "nltk.sem.drt.DrtEqualityExpression", "nltk.sem.logic.ConstantExpression", "nltk.util.Trie.LEAF", "nltk.twitter", "nltk.corpus.mac_morpho.sents", "nltk.corpus.reader.util.FileSystemPathPointer", "nltk.compat.total_ordering", "nltk.sem.read_logic", "nltk.tree.bracket_parse", "nltk.classify.megam.write_megam_file", "nltk.toolbox.to_sfm_string", "nltk.compat.itervalues", "nltk.corpus.europarl_raw.english.words", "nltk.metrics.ContingencyMeasures", "nltk.tokenize.regexp.WhitespaceTokenizer.__init__", "nltk.sem.evaluate.Model", "nltk.ccg.lexicon.ontology", "nltk.sem.lfg.FStructure", "nltk.sem.logic.OrExpression", "nltk.translate.chrf_score.sentence_chrf", "nltk.probability.MLEProbDist", "nltk.util.pairwise", "nltk.chunk.regexp", "nltk.tag.sequential.TrigramTagger", "nltk.corpus.dependency_treebank.parsed_sents", "nltk.metrics.__file__", "nltk.translate.chrf_score", "nltk.corpus.wordnet._synset_from_pos_and_offset", "nltk.sem.logic._counter._value", "nltk.corpus.rte", "nltk.corpus.wordnet.morphy", "nltk.parse.api", "nltk.Tree.build_display_tree", "nltk.corpus.reader.timit", "nltk.draw.util", "nltk.tokenize.nist.NISTTokenizer", "nltk.tokenize.simple.LineTokenizer.__init__", "nltk.sem.drt.DrtParser.__init__", "nltk.PCFG.EPSILON", "nltk.parse.featurechart.FeatureTopDownPredictRule", "nltk.corpus.sinica_treebank.parsed_sents", "nltk.corpus.wordnet.lch_similarity", "nltk.align.AlignedSent", "nltk.chat.util.Chat", "nltk.probability.WittenBellProbDist", "nltk.corpus.reader.bracket_parse.BracketParseCorpusReader", "nltk.ccg.chart.CompositionRuleSet", "nltk.tokenize.casual.HANG_RE.sub", "nltk.corpus.multext_east.tagged_words", "nltk.tag.pos_tag_sents", "nltk.classify.mallet", "nltk.inference.resolution.ResolutionProverCommand", "nltk.corpus.reader.plaintext.CategorizedPlaintextCorpusReader.__init__", "nltk.corpus.reader.api", "nltk.draw.util.TextWidget", "nltk.DrtGlueReadingCommand", "nltk.corpus.reader.wordnet.synset", "nltk.parse.chart.Chart", "nltk.tokenize.regexp.WordPunctTokenizer.__init__", "nltk.corpus.qc.tuples", "nltk.tag.sequential.UnigramTagger", "nltk.corpus.verbnet", "nltk.inference.mace", "nltk.corpus.stopwords.sents", "nltk.app.rdparser_app.app", "nltk.translate.ribes_score.position_of_ngram", "nltk.wsd.lesk", "nltk.chat.iesha.demo", "nltk.corpus.europarl_raw.english.sents", "nltk.parse.ChartParse", "nltk.tokenize.punkt", "nltk.tokenize.nist", "nltk.corpus.reuters.raw", "nltk.tokenize.util.regexp_span_tokenize", "nltk.sem.logic.Expression", "nltk.parse.chart.AbstractChartRule", "nltk.stem.snowball.GermanStemmer", "nltk.corpus.reader.xmldocs.ElementTree.parse", "nltk.sem.drt.resolve_anaphora", "nltk.wordnet.wordnet.synsets", "nltk.NavieBayesClassifier.train", "nltk.sem.logic.InconsistentTypeHierarchyException", "nltk.metrics.agreement.AnnotationTask", "nltk.stem.util.suffix_replace", "nltk.corpus.twitter_samples.strings",  "nltk.tree.tree.Tree", "nltk.data", "nltk.corpus.framenet.buildindexes", "nltk.tree.subtrees", "nltk.sem.drt.DRS", "nltk.data.get", "nltk.probability.sum_logs", "nltk.metrics.confusionmatrix.ConfusionMatrix", "nltk.parse.chart.EmptyPredictRule", "nltk.corpus.treebank", "nltk.metrics.spearman_correlation", "nltk.tokenize.punkt.PunktSentenceTokenizer", "nltk.internals.deprecated", "nltk.chunk.ChunkParserI", "nltk.compat.Counter.__init__", "nltk.data.gzip_open_unicode", "nltk.probability.MLEProbDist.__init__", "nltk.tag.brill.Pos.expand", "nltk.sem.logic.ImpExpression", "nltk.inference.prover9.Prover9Parent", "nltk.six", "nltk.collocations.TrigramCollocationFinder.from_documents", "nltk.corpus.stopwords.ensure_loaded", "nltk.corpus.alpino.words", "nltk.util.acyclic_branches_depth_first", "nltk.book.text3.plot", "nltk.tag.mapping._MAPPINGS", "nltk.probability", "nltk.draw.tree", "nltk.util.py25", "nltk.downloader.download", "nltk.corpus.reader.bracket_parse", "nltk.metrics.aline.align", "nltk.corpus.shakespeare.words", "nltk.corpus.twitter_samples.docs", "nltk.stem.porter.PorterStemmer.__init__", "nltk.classify.maxent.TypedMaxentFeatureEncoding.train", "nltk.twitter.api.TweetHandlerI.__init__", "nltk.tokenize.treebank", "nltk.parse.chart.ChartParser.__init__", "nltk.etree.ElementTree", "nltk.corpus.reader.wordnet.WordNetCorpusReader", "nltk.translate.stack_decoder._Stack", "nltk.stem.lancaster.LancasterStemmer.__init__", "nltk.book.text1.concordance", "nltk.corpus.wordnet.wordnet_util.topk_groups",  "nltk.corpus.ptb.categories", "nltk.corpus.wordnet.wup_similarity", "nltk.tag.brill", "nltk.tokenize.load", "nltk.ccg.chart.num_leaves", "nltk.compat.py3_data", "nltk.corpus.wordnet.wordnet_util.filter_groups", "nltk.ccg.lexicon.clone", "nltk.corpus.reader.ConllCorpusReader.sents", "nltk.classify.util.names_demo_features", "nltk.draw.dispersion.dispersion_plot", "nltk.corpus.reader.ChunkedCorpusReader.tagged_paras", "nltk.parse.IncrementalLeftCornerChartParser", "nltk.book.text2.similar", "nltk.metrics", "nltk.tokenize.stanford_segmenter.StanfordSegmenter", "nltk.tag.CRFTagger", "nltk.metrics.TrigramAssocMeasures.chi_sq", "nltk.sem.drt.DrtTokens.OPEN_BRACKET", "nltk.compat.BytesIO", "nltk.corpus.treebank.files", "nltk.stem.isri.ISRIStemmer", "nltk.Valuation", "nltk.tokenize.regexp.RegexpTokenizer", "nltk.translate.Alignment", "nltk.corpus.genesis.words", "nltk.corpus.reuters.fileids", "nltk.parse.featurechart.FeatureBottomUpPredictCombineRule", "nltk.chunk.regexp.RegexpChunkRule", "nltk.util.edge_closure", "nltk.sem.lfg.FStructure.read_depgraph", "nltk.toolbox.ToolboxData", "nltk.corpus.abc.fileids", "nltk.classify.megam.parse_megam_weights", "nltk.sem.linearlogic.LinearLogicApplicationException", "nltk.tree.tree", "nltk.text.ConcordanceIndex.__init__", "nltk.app.srparser_app", "nltk.sem.logic.operator", "nltk.corpus.reader.propbank.PropbankSplitTreePointer", "nltk.corpus.sentiwordnet.get", "nltk.tree.transforms.chomsky_normal_form", "nltk.corpus.nombank", "nltk.corpus.reader.util", "nltk.corpus.reuters", "nltk.test.unit.utils.skipIf", "nltk.tree.transforms.collapse_unary", "nltk.util.choose", "nltk.util.invert_graph", "nltk.tokenize.line_tokenize", "nltk.grammar.CFG.fromstring", "nltk.corpus.cess_esp.fileids", "nltk.parse.chart.SingleEdgeFundamentalRule", "nltk.corpus.wordnet.NOUM", "nltk.sem.logic.Tokens.CLOSE", "nltk.ccg.chart.TypeRaiseRuleSet", "nltk.probability.MutableProbDist", "nltk.inference.api.BaseProverCommand.__init__", "nltk.parse.corenlp.CoreNLPDependencyParser", "nltk.sourcedstring.SourcedStringStream", "nltk.sem.chat80", "nltk.classify.maxent.TadmMaxentClassifier.train", "nltk.tag.hmm.HiddenMarkovModelTrainer", "nltk.tag.hmm._create_hmm_tagger", "nltk.classify.naivebayes", "nltk.corpus.reuters.categories", "nltk.corpus.semcor.chunks", "nltk.grammar.parse_cfg_production", "nltk.sem.drt.AnaphoraResolutionException", "nltk.chktype", "nltk.DependencyGraph", "nltk.chunk.util.ChunkScore", "nltk.app.nemo", "nltk.corpus.nombank.fileids", "nltk.corpus.gutenberg", "nltk.classify.maxent.MaxentClassifier", "nltk.stem.rslp", "nltk.corpus.inaugural.sents", "nltk.corpus.words.append", "nltk.corpus.cess_cat.tagged_sents", "nltk.corpus.treebank_chunk", "nltk.corpus.verbnet.frames_for_lemma", "nltk.corpus.wordnet.langs", "nltk.metrics.agreement", "nltk.stem.porter", "nltk.grammar.toy_pcfg2", "nltk.sem.drt", "nltk.corpus.names.readme", "nltk.corpus.cmudict", "nltk.corpus.twitter_samples.tokenized", "nltk.chat.iesha", "nltk.sem.drt.DrtLambdaExpression", "nltk.DiscourseTester", "nltk.sem.logic.Expression.fromstring", "nltk.lazyimport.LazyModule", "nltk.app.srparser_app.app", "nltk.tag.api.FeaturesetTaggerI", "nltk.jsontags", "nltk.corpus.reader.NPSChatCorpusReader", "nltk.parse.chart.CachedTopDownPredictRule", "nltk.sem.logic.VariableExpression", "nltk.metrics.distance", "nltk.treeprettyprinter.TreePrettyPrinter", "nltk.tag.ClassifierBasedTagger.__init__", "nltk.corpus.cess_esp.words", "nltk.parse.chart.TreeEdge.__str__", "nltk.corpus.udhr2", "nltk.ccg.lexicon.category_semantic_arities", "nltk.sentiment.vader.allcap_differential", "nltk.ccg.chart.CCGChartParser", "nltk.corpus.shakespeare.xml", "nltk.tree.ImmutableParentedTree", "nltk.data.SeekableUnicodeStreamReader", "nltk.parse.viterbi", "nltk.tag.mapping.tagset_mapping", "nltk.corpus.reader.ConllCorpusReader.words", "nltk.sem.logic.IffExpression", "nltk.classify.BinaryMaxentFeatureEncoding", "nltk.corpus.indian.words", "nltk.draw.util.ShowText", "nltk.inference.api.BaseModelBuilderCommand", "nltk.re.error", "nltk.chunk.ieerstr2tree", "nltk.test.unit.utils", "nltk.compat.reload", "nltk.corpus.words.readme", "nltk.stem.snowball.PorterStemmer", "nltk.classify.util", "nltk.internals.Counter", "nltk.corpus.reader.api.CategorizedCorpusReader.__init__", "nltk.grammar.FeatDict", "nltk.parse.chart.demo", "nltk.downloader.Downloader.INSTALLED", "nltk.Tree", "nltk.corpus.europarl_raw.french", "nltk.tree.immutable", "nltk.corpus.sentiwordnet.all_senti_synsets", "nltk.tree.Tree", "nltk.corpus.floresta", "nltk.corpus.toolbox.xml", "nltk.parse.featurechart.FeatureChart", "nltk.internals.slice_bounds", "nltk.sem.glue", "nltk.parse.pchart", "nltk.sem.parse_logic", "nltk.corpus.framenet.lu", "nltk.util.transitive_closure", "nltk.inference.mace.Mace", "nltk.corpus.reader.SwitchboardCorpusReader", "nltk.translate.IBMModel4", "nltk.book.text7", "nltk.tag.api.TaggerI", "nltk.cluster.util.VectorSpaceClusterer.cluster", "nltk.tag.SennaNERTagger", "nltk.corpus.reader.ConllCorpusReader", "nltk.stem.lancaster", "nltk.draw.util.ParenWidget", "nltk.corpus.wordnet", "nltk.classify.MaxentClassifier", "nltk.corpus.reuters.load_data", "nltk.lm.api", "nltk.tag.sequential", "nltk.ccg.lexicon.ontology.get_expr_arity", "nltk.translate.bleu_score.sentence_bleu", "nltk.tree.parented.MultiParentedTree", "nltk.collocations.BigramCollocationFinder.from_words", "nltk.chat.rude.rude_chat", "nltk.tokenreader", "nltk.corpus.treebank.parsed_sents", "nltk.translate.IBMModel5.MIN_SCORE_FACTOR", "nltk.sentiment.vader.SentiText", "nltk.translate.meteor_score.single_meteor_score", "nltk.classifier", "nltk.tgrep.tgrep_compile", "nltk.corpus.abc.raw", "nltk.tag.stanford.CoreNLPNERTagger", "nltk.corpus.reader.ConllCorpusReader.tagged_words", "nltk.classify.api", "nltk.chat.rude.rude_chatbot", "nltk.tree.Tree.root", "nltk.tokenize.simple.SpaceTokenizer.__init__", "nltk.corpus.genesis.raw", "nltk.corpora.chat80.rels", "nltk.FeatureEarleyChartParser", "nltk.tbl.Template", "nltk.sentiment.SentimentAnalyzer", "nltk.translate.ibm_model.longest_target_sentence_length", "nltk.probability.ProbabilisticMixIn.__init__", "nltk.__longdescr__", "nltk.tag.sequential.RegexpTagger", "nltk.tag.crf", "nltk.twitter.api.BasicTweetHandler", "nltk.lemmer.lemmatize", "nltk.data.load", "nltk.internals.config_java", "nltk.tokenize.casual.EMOTICON_RE.findall", "nltk.corpus.timit.spkrid", "nltk.ccg.lexicon.ontology.infer_type", "nltk.parse.chart.BottomUpPredictCombineRule", "nltk.stem.arlstem", "nltk.sem.logic.ENTITY_TYPE", "nltk.corpus.reader.conll.ConllCorpusReader.IGNORE", "nltk.classify.textcat", "nltk.internals.parse_str", "nltk.tbl", "nltk.tokenize._treebank_word_tokenizer.span_tokenize", "nltk.draw.dispersion", "nltk.sem.skolemize", "nltk.corpus.treebank.open", "nltk.tag.Bigram", "nltk.corpus.treebank.tagged_words", "nltk.DependencyGraph._tree_labeled", "nltk.corpus.product_reviews_1.features", "nltk.tag.ClassifierBasedTagger", "nltk.corpus.util", "nltk.sem.drt.DrtTokens.OPEN", "nltk.corpus.movie_reviews.readme", "nltk.lm.Laplace", "nltk.tree.Tree._repr_png_", "nltk.corpus.movie_reviews.sents", "nltk.tokenize.stanford.CoreNLPTokenizer", "nltk.tokenize.punkt.PunktSentenceTokenizer.PUNCTUATION", "nltk.collocations.QuadgramCollocationFinder.from_words", "nltk.corpus.reader.sentiwordnet", "nltk.grammar.parse_dependency_grammar", "nltk.sem.logic.IllegalTypeException", "nltk.util", "nltk.tag.api.HiddenMarkovModelTaggerTransformI", "nltk.compat.StringIO", "nltk.tree.ImmutableTree", "nltk.tokenize.casual.TweetTokenizer.__init__", "nltk.sequential", "nltk.sem.logic.BasicType", "nltk.test.cfg", "nltk.corpus.cmudict.words", "nltk.corpus.words.split", "nltk.probability.ConditionalFreqDist", "nltk.corpus.comparative_sentences", "nltk.sem.logic.EVENT_TYPE", "nltk.cluster.gaac", "nltk.corpus.indian", "nltk.sem.logic.Type.fromstring", "nltk.corpus.cess_esp.sents", "nltk.compat.unichr", "nltk.lm.MLE", "nltk.__path__", "nltk.chat.eliza.eliza_chat", "nltk.corpus.treebank_raw", "nltk.tokenize.simple", "nltk.stem.snowball.ArabicStemmer", "nltk.__classifiers__", "nltk.draw", "nltk.book.text9", "nltk.jsontags.JSONTaggedEncoder", "nltk.metrics.BigramAssocMeasures.chi_sq", "nltk.sem.logic.AbstractVariableExpression", "nltk.corpus.conll2000.tagged_sents", "nltk.classify.positivenaivebayes.demo", "nltk.wordnet.wordnet.langs", "nltk.sem.logic.LambdaExpression", "nltk.parse.featurechart.FeatureChartParser", "nltk.corpus.state_union.fileids", "nltk.sem.relextract.tree2semi_rel", "nltk.corpus.sinica_treebank", "nltk.parse", "nltk.corpus.reader.conll.ConllCorpusReader", "nltk.corpus.gazetteers.words", "nltk.tokenize.casual.HANG_RE", "nltk.corpora.chat80.make_valuation", "nltk.probability.LidstoneProbDist", "nltk.translate.meteor_score", "nltk.lm.WittenBellInterpolated", "nltk.model.ngram.NgramModel", "nltk.PCFG", "nltk.corpus.wordnet.wordnet_util.normalize_groups", "nltk.tag.util.str2tuple", "nltk.internals.convert_regexp_to_nongrouping", "nltk.app.rdparser_app", "nltk.batch_ne_chunk", "nltk.compat.StringIO.truncate", "nltk.corpus.brown.tagged_sents", "nltk.corpus.reader.tagged.TaggedCorpusReader", "nltk.classify.DecisionTreeClassifier", "nltk.twitter.Authenticate", "nltk.corpus.reader.util.find_corpus_fileids", "nltk.corpus.reader.propbank.PropbankTreePointer", "nltk.corpus.qc", "nltk.collocations.ngrams", "nltk.corpus.stopwords.words", "nltk.classify.util.partial_names_demo", "nltk.translate.PhraseTable", "nltk.corpus.reader.sentiwordnet.SentiWordNetCorpusReader", "nltk.internals.ElementWrapper", "nltk.book.text4", "nltk.compat.class_types", "nltk.corpus.timit.word_times", "nltk.classify.tadm", "nltk.classify.rte_classify.RTEFeatureExtractor", "nltk.corpus.nonbreaking_prefixes", "nltk.corpus.floresta.sents", "nltk.Valuation.fromstring", "nltk.corpus.comtrans.fileids", "nltk.tbl.demo.demo", "nltk.collections.Counter", "nltk.tokenize.wordpunct_tokenize", "nltk.stem.cistem.Cistem", "nltk.corpus.wordnet.ADJ_SAT", "nltk.cfg.parse_cfg", "nltk.classify.util.apply_features", "nltk.data.FileSystemPathPointer", "nltk.corpus.reader.ConllCorpusReader.parsed_sents", "nltk.sem.linearlogic.ConstantExpression", "nltk.tokenize.api.TokenizerI", "nltk.collocations.BigramCollocationFinder.from_documents", "nltk.grammar.PCFG", "nltk.tag.simplify.simplify_wsj_tag", "nltk.corpus.toolbox.words", "nltk.translate.bleu_score.modified_precision", "nltk.defaultdict", "nltk.stem.porter.PorterStemmer.ORIGINAL_ALGORITHM", "nltk.parse.featurechart.demo", "nltk.parse.chart.BottomUpChartParser", "nltk.tokenize.word", "nltk.tokenize.util.spans_to_relative", "nltk.corpus.conll2000.chunked_sents", "nltk.draw.rdparser", "nltk.sem.relextract.semi_rel2reldict", "nltk.corpus.stopwords.to_csv", "nltk.tag.brill.ProximateTokensTemplate", "nltk.corpus.reader.api.SyntaxCorpusReader", "nltk.parse.corenlp", "nltk.corpus.wordnet.lemma", "nltk.lm.counter.NgramCounter", "nltk.stem.regexp.RegexpStemmer", "nltk.data.iloc", "nltk.data.copy", "nltk.corpus.opinion_lexicon.negative", "nltk.book.texts", "nltk.tag.sequential.AffixTagger", "nltk.corpus.movie_reviews.raw", "nltk.corpus.sentence_polarity", "nltk.corpus.gutenberg.paras", "nltk.tag.sequential.RegexpTagger.__init__", "nltk.collocations.BigramAssocMeasures.student_t", "nltk.sem.evaluate", "nltk.translate.ribes_score.corpus_ribes", "nltk.sem.drt.DrtNegatedExpression", "nltk.corpus.timit", "nltk.corpus.gutenberg.raw", "nltk.corpus.webtext.fileids", "nltk", "nltk.sem.logic.ParseException", "nltk.corpus.PropbankCorpusReader", "nltk.lm.api.LanguageModel", "nltk.chat.zen", "nltk.corpus.reader.wordnet.VERB", "nltk.tag.stanford.StanfordNERTagger", "nltk.translate.bleu_score.closest_ref_length", "nltk.corpus.words.words", "nltk.cluster", "nltk.corpus.conll2002.chunked_sents", "nltk.tag.sequential.ClassifierBasedTagger", "nltk.tokenize.punkt.PunktParameters", "nltk.tree.productions", "nltk.parse.transitionparser.TransitionParser.ARC_STANDARD", "nltk.corpus.timit.utteranceids", "nltk.corpus.wordnet._lemma_pos_offset_map", "nltk.util.LazySubsequence", "nltk.sentiment.util", "nltk.sem.drt.DrtTokens.CLOSE", "nltk.corpus.ieer.parsed_docs", "nltk.twitter.common.extract_fields", "nltk.metrics.segmentation.pk", "nltk.corpus.gutenberg.abspath", "nltk.grammar.CFG", "nltk.tree.sinica_parse", "nltk.tag.brill.SymmetricProximateTokensTemplate", "nltk.corpus.timit.words", "nltk.translate.IBMModel2", "nltk.parse.pchart.LongestChartParser", "nltk.induce_pcfg", "nltk.compat.izip", "nltk.tag.brill.Template", "nltk.help", "nltk.parse.chart", "nltk.corpus.wordnet.custom_lemmas", "nltk.corpus.lin_thesaurus.synonyms", "nltk.metrics.QuadgramAssocMeasures.likelihood_ratio", "nltk.sem.logic.ApplicationExpression", "nltk.cluster.util.VectorSpaceClusterer", "nltk.tree.leaves",  "nltk.draw.tree.TreeView", "nltk.sem.drt.DrtTokens.COMMA", "nltk.cluster.util", "nltk.parse.ShiftReduceParser", "nltk.draw.chart.demo", "nltk.corpus.reader.ConllCorpusReader.chunked_words",  "nltk.corpus.toolbox", "nltk.tree.transforms", "nltk.metrics.association.QuadgramAssocMeasures", "nltk.tag.hmm._NINF", "nltk.corpus.wordnet.get_subclasses", "nltk.probability.ELEProbDist", "nltk.corpus.conll2007.sents", "nltk.compat.StringIO.getvalue", "nltk.ccg.lexicon.PrimitiveCategory", "nltk.tokenize.punkt.PunktSentenceTokenizer.missing_models_message", "nltk.corpus.reader.propbank.PropbankChainTreePointer", "nltk.tree.prettyprinter.TreePrettyPrinter", "nltk.tree.Tree.__hash__", "nltk.sequential.AffixTagger", "nltk.RegexpTokenizer", "nltk.corpus.reader.ChunkedCorpusReader.chunked_paras", "nltk.parse.bllip", "nltk.chat.zen.demo", "nltk.help.upenn_tagset", "nltk.re.search", "nltk.stem.RSLPSteemer", "nltk.corpus.framenet.frame", "nltk.corpus.nps_chat.xml_posts", "nltk.tokenize.regexp", "nltk.metrics.TrigramAssocMeasures.jaccard", "nltk.tokenize.SyllableTokenizer", "nltk.ccg.lexicon.fromstring", "nltk.corpus.sentiwordnet.load", "nltk.tree.ParentedTree", "nltk.corpora.chat80.process_bundle", "nltk.chktype.chktype", "nltk.corpus.stopwords.abspath", "nltk.corpus.words.ensure_loaded", "nltk.util.ngrams", "nltk.metrics.TrigramAssocMeasures.raw_freq", "nltk.corpus.twitter_samples", "nltk.compat.u", "nltk.corpus.pros_cons.words", "nltk.parse.transitionparser.Transition", "nltk.corpus.udhr2.sents", "nltk.model.api",  "nltk.tokenize.simple.LineTokenizer", "nltk.sentiment.util.save_file", "nltk.metrics.BigramAssocMeasures.likelihood_ratio", "nltk.tag.simplify_alpino_tag", "nltk.corpus.timit.spkrinfo", "nltk.featstruct.SLASH", "nltk.chat.rude.demo", "nltk.lm.preprocessing.pad_both_ends", "nltk.internals.overridden", "nltk.classify.svm.SvmClassifier.train", "nltk.sem.relextract.rtuple", "nltk.wordnet.wordnet", "nltk.corpus.abc", "nltk.translate.ibm_model", "nltk.tokenize.moses.MosesTokenizer", "nltk.tree.transforms.un_chomsky_normal_form", "nltk.corpus.timit.sentid", "nltk.cfg.CFG", "nltk.ccg.api.CCGVar", "nltk.tokenize.destructive.NLTKWordTokenizer", "nltk.corpus.cess_cat.tagged_words", "nltk.corpus.movie_reviews.abspaths", "nltk.sem.logic.TypeException", "nltk.ccg.lexicon.parseLexicon", "nltk.corpus.stopwords.map", "nltk.tbl.Template.ALLTEMPLATES", "nltk.data.path", "nltk.corpus.reader.CategorizedBracketParseCorpusReader", "nltk.twitter.api.TweetHandlerI", "nltk.corpus.nps_chat", "nltk.corpus.indian.sents", "nltk.chat.suntsu.demo", "nltk.corpus.state_union.sents", "nltk.tokenize.punkt.PunktSentenceTokenizer.__init__", "nltk.chunk.named_entity.NEChunkParser", "nltk.tokenize.casual.reduce_lengthening", "nltk.twitter.Streamer", "nltk.tree.parented", "nltk.corpus.stopwords.open", "nltk.etree.ElementTree.Element", "nltk.util.LazyIteratorList", "nltk.grammar.is_terminal", "nltk.parse.util.extract_test_sentences", "nltk.parse.featurechart.FeatureTopDownInitRule", "nltk.lm.smoothing.WittenBell", "nltk.tag.Trigram", "nltk.corpus.webtext", "nltk.sentiment.util.demo_liu_hu_lexicon", "nltk.stem.snowball.SpanishStemmer", "nltk.internals.find_dir", "nltk.sem.logic.SubstituteBindingsI", "nltk.internals.find_jars_within_path", "nltk.corpora.chat80", "nltk.corpus.reader.ChunkedCorpusReader.words", "nltk.corpus.movie_reviews.append", "nltk.internals.java", "nltk.translate.stack_decoder._Hypothesis",  "nltk.metrics.ranks_from_scores", "nltk.lm.preprocessing.flatten", "nltk.utilities.clean_html", "nltk.__keywords__", "nltk.corpus.semcor.words", "nltk.corpus.reader.util.StreamBackedCorpusView", "nltk.classify.decisiontree", "nltk.corpus.reader.util.read_line_block", "nltk.corpus.reader.framenet.FramenetCorpusReader", "nltk.corpus.sinica_treebank.fileids", "nltk.wordnet.wordnet.all_synsets", "nltk.corpus.nps_chat.tagged_words", "nltk.collocations.BigramCollocationFinder", "nltk.corpus.reader.IndianCorpusReader", "nltk.classify.util.log_likelihood", "nltk.tokenize.sexpr", "nltk.tag.pos_tag", "nltk.corpus", "nltk.grammar.parse_fcfg", "nltk.corpus.pros_cons", "nltk.tag._POS_TAGGER", "nltk.metrics.association", "nltk.classify.scikitlearn.SklearnClassifier", "nltk.chunk._MULTICLASS_NE_CHUNKER", "nltk.tokenize.stanford", "nltk.tree.treepositions", "nltk.tree.immutable.ImmutableParentedTree", "nltk.corpus.__getattr__", "nltk.sem.logic.Expression.__hash__", "nltk.tokenize.regexp.BlanklineTokenizer.__init__", "nltk.cluster.kmeans.KMeansClusterer", "nltk.grammar.standard_nonterm_parser", "nltk.book.text2.tokens", "nltk.probability.ProbDistI.generate", "nltk.grammar.parse_cfg", "nltk.stem.rslp.RSLPStemmer.__init__", "nltk.sem.drt.DrtProposition", "nltk.sentiment.vader", "nltk.corpus.verbenet", "nltk.corpus.conll2000", "nltk.sem.logic.FunctionVariableExpression", "nltk.featstruct.FeatDict", "nltk.chat.suntsu.suntsu_chatbot", "nltk.corpus.sentiwordnet.synset", "nltk.corpus.reader.conll.ConllCorpusReader.WORDS", "nltk.sem.logic.APP", "nltk.corpus.wordnet.get_version", "nltk.sem.drt.DrtParser.parse", "nltk.tag.brill.nltkdemo18", "nltk.parse.bracket_parse", "nltk.featstruct", "nltk.probability.LaplaceProbDist", "nltk.sem.logic.Tokens.OPEN", "nltk.corpus.gutenberg.words", "nltk.chat.rude", "nltk.tag.hmm.HiddenMarkovModelTagger.train", "nltk.lm.preprocessing.padded_everygram_pipeline", "nltk.parse.IncrementalTopDownChartParser", "nltk.parse.dependencygraph.conll_data2.split", "nltk.corpus.gutenberg.fileids", "nltk.lm.util", "nltk.treetransforms.un_chomsky_normal_form", "nltk.tag.tnt.TnT", "nltk.grammar.ProbabilisticDependencyGrammar", "nltk.parse.corenlp.try_port", "nltk.corpus.inaugural.fileids", "nltk.classify.megam.call_megam", "nltk.stem.regexp", "nltk.translate.ribes_score.sentence_ribes", "nltk.corpus.stopwords.update", "nltk.pos_tag.startswith", "nltk.metrics.BigramAssocMeasures.dice", "nltk.corpus.inaugural.paras", "nltk.parse.chart.SteppingChartParser", "nltk.parse.api.ParserI", "nltk.tag.perceptron.PerceptronTagger", "nltk.corpus.gutenberg.ensure_loaded", "nltk.sem.evaluate.Assignment", "nltk.corpus.mac_morpho.tagged_words", "nltk.tokenize.sexpr.SExprTokenizer", "nltk.corpus.names", "nltk.classify.maxent.TypedMaxentFeatureEncoding", "nltk.corpus.reader.ChunkedCorpusReader.raw", "nltk.corpus.ptb.fileids", "nltk.tokenize.sexpr.sexpr_tokenize", "nltk.data.PathPointer", "nltk.corpus.reader.util.read_whitespace_block", "nltk.grammar.WeightedGrammar", "nltk.corpus.movie_reviews.open", "nltk.corpus.reader.ChunkedCorpusReader.__init__", "nltk.draw.util.SpaceWidget", "nltk.corpus.NombankCorpusReader", "nltk.app", "nltk.compat.text_type", "nltk.ccg.combinator", "nltk.classify.maxent.MaxentClassifier.__doc__", "nltk.download_shell", "nltk.ccg.api.PrimitiveCategory", "nltk.corpus.names.words", "nltk.ccg.combinator.ForwardComposition", "nltk.tokenize.punkt._pair_iter", "nltk.corpus.cess_esp._tagset", "nltk.__author__", "nltk.corpus.sinica_treebank.tagged_sents", "nltk.data._resource_cache", "nltk.corpus.reader.wordnet.Synset", "nltk.classify.util.binary_names_demo_features", "nltk.sem.drt.DrsDrawer", "nltk.chat.iesha.iesha_chat", "nltk.inference.prover9", "nltk.corpus.conll2002.iob_sents", "nltk.corpus.movie_reviews.categories", "nltk.corpus.udhr2.raw", "nltk.ccg.combinator.ForwardApplication", "nltk.chat.zen.zen_chat", "nltk.stem.snowball.SnowballStemmer.languages", "nltk.corpus.dependency_treebank.words", "nltk.sem.logic.Tokens.SYMBOLS", "nltk.tag._POS_TAGGER.split", "nltk.corpus.wordnet.jcn_similarity", "nltk.internals.find_jar_iter", "nltk.app.wordnet", "nltk.collocations.AbstractCollocationFinder.__init__", "nltk.sem.logic.BooleanExpression", "nltk.classify.naivebayes.NaiveBayesClassifier", "nltk.draw.util.CanvasWidget", "nltk.test.chktype", "nltk.tokenize.simple.TabTokenizer.__init__", "nltk.translate.gleu_score.sentence_gleu", "nltk.grammar._PROBABILITY_RE", "nltk.twitter.util.guess_path", "nltk.parse.pchart.InsideChartParser", "nltk.metrics.scores", "nltk.stem.porter.PorterStemmer.NLTK_EXTENSIONS", "nltk.sem.linearlogic.LinearLogicParser", "nltk.translate.api.Alignment", "nltk.util.trigrams", "nltk.grammar.parse_pcfg", "nltk.corpus.cess_cat", "nltk.cfg", "nltk.app.chunkparser", "nltk.lm.models", "nltk.text.TextCollection", "nltk.book.text2.concordance", "nltk.sem.linearlogic", "nltk.tag.stanford", "nltk.metrics.QuadgramAssocMeasures", "nltk.corpus.reader.xmldocs", "nltk.translate.bleu_score.brevity_penalty", "nltk.model.api.ModelI", "nltk.ccg.combinator.ForwardSubstitution", "nltk.parse.util", "nltk.translate.api.AlignedSent", "nltk.tree.ImmutableParentedTree.fromstring", "nltk.metrics.scores.accuracy", "nltk.compat.raw_input", "nltk.corpus.twitter_samples.raw", "nltk.tbl.rule.Rule", "nltk.book.text3.dispersion_plot", "nltk.corpus.reader", "nltk.corpus.mac_morpho.tagged_paras", "nltk.grammar._read_cfg_production", "nltk.sentiment.util.EMOTICON_RE", "nltk.corpus.wordnet.path_similarity", "nltk.translate.nist_score.sentence_nist", "nltk.sentiment", "nltk.tokenize.api.StringTokenizer", "nltk.evaluate_sents", "nltk.grammar.nonterminals.split", "nltk.lm.smoothing", "nltk.corpus.wordnet.all_lemma_names", "nltk.metrics.BigramAssocMeasures.raw_freq", "nltk.corpus.lin_thesaurus", "nltk.classify.api.ClassifierI", "nltk.internals._java_bin", "nltk.sem.logic.ANY_TYPE.str", "nltk.inference.tableau.TableauProver", "nltk.tokenize.casual.EMOTICON_RE", "nltk.internals.find_binary", "nltk.downloader", "nltk.sem.skolemize.skolemize", "nltk.tag.ClassifierBasedPOSTagger.feature_detector", "nltk.tag.SennaChunkTagger", "nltk.data.columns.get_loc", "nltk.tokenize.util.xml_unescape", "nltk.corpus.stopwords.union", "nltk.corpus.reuters.abspath", "nltk.corpus.webtext.raw", "nltk.corpus.state_union.raw", "nltk.corpus.words.extend", "nltk.corpus.brown.fileids", "nltk.parse.dependencygraph.DependencyGraph.load", "nltk.downloader._downloader", "nltk.tag.brill_trainer", "nltk.raise_error", "nltk.chunk.named_entity", "nltk.ccg.chart.select", "nltk.inference.api.Prover", "nltk.twitter.Twitter", "nltk.ccg.chart.DefaultRuleSet", "nltk.translate.nist_score", "nltk.corpus.product_reviews_1", "nltk.probability.UniformProbDist", "nltk.corpus.ptb", "nltk.corpus.udhr.words", "nltk.tag._pos_tag", "nltk.grammar.DependencyProduction", "nltk.tree.pretty_print", "nltk.sem.drt.DrtExpression", "nltk.sem.drt.DrtParser", "nltk.download_gui", "nltk.corpus.brown.raw", "nltk.tag.sequential.NgramTagger.__init__", "nltk.metrics.BigramAssocMeasures.pmi", "nltk.stem.PorterStemmer.stem", "nltk.draw.tree.draw_trees", "nltk.corpus.wordnet._morphy", "nltk.metrics.BigramAssocMeasures.jaccard", "nltk.corpus.udhr.sents", "nltk.corpus.reader.ChunkedCorpusReader", "nltk.corpus.reader.xmldocs.XMLCorpusReader.__init__", "nltk.tgrep.tgrep_positions", "nltk.parse.generate.demo_grammar", "nltk.metrics.association.QuadgramAssocMeasures.likelihood_ratio", "nltk.compat", "nltk.corpus.mac_morpho", "nltk.corpus.dependency_treebank.sents", "nltk.corpus.sentence_polarity.categories", "nltk.tree.tree.Tree.__init__", "nltk.grammar.FeatStructNonterminal", "nltk.corpus.reader.xmldocs.ElementTree", "nltk.test.unit", "nltk.metrics.interval_distance", "nltk.tag.brill.brill24", "nltk.tokenize.punkt.PunktBaseClass", "nltk.parse.corenlp.CoreNLPServerError", "nltk.tokenize.util.is_cjk", "nltk.metrics.distance.binary_distance", "nltk.sem.relextract", "nltk.tokenize.TabTokenizer", "nltk.translate.meteor", "nltk.collocations.BigramAssocMeasures.raw_freq", "nltk.tokenize.simple.SpaceTokenizer", "nltk.corpus.reader.ConllCorpusReader.iob_words", "nltk.corpus.reader.xmldocs.XMLCorpusView", "nltk.corpus.reader.ConllCorpusReader.srl_spans", "nltk.corpus.reader.util.read_alignedsent_block", "nltk.corpus.propbank.roleset", "nltk.corpus.senseval.fileids", "nltk.corpus.timit.phones", "nltk.grammar.ContextFreeGrammar", "nltk.corpus.genesis.fileids", "nltk.__license__", "nltk.corpus.reader.xmldocs.XMLCorpusView.read_block", "nltk.translate.ibm_model.AlignmentInfo", "nltk.tgrep.TgrepException", "nltk.classify.rte_classify.rte_classifier", "nltk.TextCollection.__init__", "nltk.sem.cooper_storage", "nltk.tag.util.tuple2str", "nltk.tokenize.regexp.BlanklineTokenizer", "nltk.classify.mallet.config_mallet", "nltk.corpus.stopwords.word", "nltk.corpus.conll2000.iob_sents", "nltk.corpus.perluniprops.chars", "nltk.corpus.reader.conll", "nltk.inference.mace.MaceCommand", "nltk.corpus.timit.sent_times", "nltk.data.extend", "nltk.ne_chunk_sents", "nltk.corpus.framenet.lu_basic", "nltk.corpus.conll2000.sents", "nltk.chat.suntsu.suntsu_chat", "nltk.corpus.europarl_raw.french.sents", "nltk.inference.prover9.Prover9", "nltk.ccg", "nltk.sem.linearlogic.VariableExpression", "nltk.chat.eliza.demo", "nltk.sem.logic.LogicParser.__init__", "nltk.tokenizer.RegexpTokenizer", "nltk.tree.Tree.pos", "nltk.ccg.lexicon", "nltk.corpus.ptb.tagged_words", "nltk.corpus.rte.xml", "nltk.corpus.floresta.words", "nltk.corpus.wordnet.lin_similarity", "nltk.corpus.framenet.frames_by_lemma", "nltk.parse.dependencygraph.DependencyGraph.__init__", "nltk.parse.featurechart.FeatureSingleEdgeFundamentalRule", "nltk.tag.NgramTagger.__init__", "nltk.data.LazyLoader",  "nltk.corpus.sinica_treebank.words", "nltk.__version__.split", "nltk.corpus.reader.IEERCorpusReader", "nltk.corpus.framenet.docs_metadata", "nltk.pos_tag", "nltk.compat.UTC", "nltk.collocations.BigramAssocMeasures", "nltk.etree", "nltk.tag.crf.CRFTagger", "nltk.corpus.swadesh.words", "nltk.chunk.regexp.RegexpParser", "nltk.classify.maxent.TadmEventMaxentFeatureEncoding", "nltk.compat.getproxies", "nltk.corpus.stopwords", "nltk.translate.meteor_score.meteor_score", "nltk.corpus.treebank.fileids", "nltk.usage", "nltk.interpret_sents", "nltk.corpus.reader.ConllChunkCorpusReader", "nltk.probability.ConditionalFreqDist.__init__", "nltk.corpus.reader.pl196x", "nltk.sem.logic.IndividualVariableExpression", "nltk.app.srparser", "nltk.corpus.stopwords.readlines", "nltk.tree.Tree.chomsky_normal_form", "nltk.ccg.lexicon.ontology.types", "nltk.metrics.distance.edit_distance", "nltk.corpus.stopwords.append", "nltk.corpus.genesis", "nltk.corpus.reader.NKJPCorpusReader", "nltk.tokenize.stanford_segmenter", "nltk.util.pad_sequence", "nltk.translate.bleu_score.nltk.translate.bleu_score", "nltk.corpus.inaugural.words", "nltk.corpus.floresta.parsed_sents", "nltk.metrics.segmentation.ghd", "nltk.translate.bleu_score.SmoothingFunction", "nltk.corpus.rte.pairs", "nltk.corpus.brown", "nltk.corpus.multext_east", "nltk.sem.logic.ComplexType", "nltk.tree.label", "nltk.corpus.multext_east.words", "nltk.stem", "nltk.ccg.chart", "nltk.corpus.perluniprops", "nltk.corpus.reader.conll.ConllCorpusReader.POS", "nltk.corpus.twitter_samples.string", "nltk.stem.rslp.RSLPStemmer", "nltk.compat.UnicodeWriter", "nltk.tgrep.tgrep_nodes", "nltk.corpus.timit.transcription_dict", "nltk.util.unique_list", "nltk.chat.eliza.eliza_chatbot", "nltk.stem.snowball.RussianStemmer", "nltk.tag.brill.Word.expand", "nltk.tokenize.simple.TabTokenizer", "nltk.corpus.sinica_treebank.tagged_words", "nltk.corpus.state_union", "nltk.parse.stanford.StanfordDependencyParser", "nltk.sem.cooper_storage.parse_with_bindops", "nltk.downloader._downloader.is_installed", "nltk.metrics.association.BigramAssocMeasures.jaccard", "nltk.draw.util.CanvasFrame", "nltk.corpus.reader.wordnet.WordNetError", "nltk.corpus.semcor.tagged_chunks", "nltk.corpus.multext_east.tagged_sents", "nltk.jsontags.json_tags", "nltk.util.LazyConcatenation", "nltk.translate.IBMModel1", "nltk.NavieBayesClassifier", "nltk.parse.TopDownChartParser", "nltk.corpus.stopwords.extend", "nltk.inference.api.BaseModelBuilderCommand.__init__", "nltk.chat.util", "nltk.corpus.genesis.sents", "nltk.corpus.sinica_treebank.sents", "nltk.classify.util.check_megam_config", "nltk.tag.accuracy", "nltk.corpus.pros_cons.sents", "nltk.corpus.reader.tagged", "nltk.corpus.wordnet.res_similarity", "nltk.corpus.timit.phone_trees", "nltk.compat.url2pathname", "nltk.translate.nist_score.corpus_nist", "nltk.stem.api.StemmerI", "nltk.classify.maxent", "nltk.corpus.webtext.sents", "nltk.corpus.brown.tagged_paras", "nltk.tag.ClassifierBasedPOSTagger.__init__", "nltk.corpus.reuters.labels", "nltk.tree.ParentedTree.fromstring", "nltk.compat.string_types", "nltk.parse.malt.MaltParser", "nltk.draw.table", "nltk.collocations.BigramAssocMeasures.chi_sq", "nltk.corpus.webtext.words", "nltk.tree.immutable.ImmutableMultiParentedTree", "nltk.classify.DecisionTreeClassifier.train", "nltk.ccg.api.FunctionalCategory", "nltk.sourcedstring", "nltk.corpus.wordnet.synsets", "nltk.metrics.segmentation.windowdiff", "nltk.corpus.reader.ConllCorpusReader.tagged_sents", "nltk.corpus.floresta.tagged_sents", "nltk.tokenize.moses.MosesDetokenizer", "nltk.draw.rdparser.demo", "nltk.parse.corenlp.CoreNLPServer", "nltk.tag.simplify_brown_tag", "nltk.stem.arlstem.ARLSTem", "nltk.tokenize.punkt.PunktLanguageVars", "nltk.lm.Lidstone", "nltk.stem.isri", "nltk.sem.drt.DrtExpression.fromstring",  "nltk.corpus.stopwords.remove", "nltk.corpus.udhr.raw", "nltk.corpus.brown.words", "nltk.tag.tnt", "nltk.corpus.reader.wordnet.information_content", "nltk.translate.gale_church.align_texts", "nltk.classify.maxent.TadmEventMaxentFeatureEncoding.train", "nltk.metrics.distance.jaro_similarity", "nltk.corpus.wordnet.synset", "nltk.chat.util.reflections", "nltk.ccg.combinator.BackwardT", "nltk.twitter.common", "nltk.corpus.treebank.tagged_sents", "nltk.compat.install_opener", "nltk.model", "nltk.tokenize.RegexpTokenizer", "nltk.corpus.timit.play", "nltk.sentiment.vader.NEGATE", "nltk.corpus.conll2007.parsed_sents", "nltk.classify.util.CutoffChecker", "nltk.tag.AffixTagger", "nltk.util.py26", "nltk.ccg.combinator.BackwardSx", "nltk.corpus.swadesh.entries", "nltk.__version__.startswith", "nltk.tokenize.casual.EMOTICON_RE.sub", "nltk.corpus.brown._unload", "nltk.tokenize.toktok.ToktokTokenizer.__init__", "nltk.tag.sequential.UnigramTagger.__init__", "nltk.corpus.gutenberg.open", "nltk.corpus.framenet.frame_by_name", "nltk.corpus.sentiwordnet.senti_synsets", "nltk.corpus.reader.ChunkedCorpusReader.paras", "nltk.tokenizer.WhitespaceTokenizer", "nltk.corpus.cess_esp.tagged_sents", "nltk.tokenize.punkt.PunktTrainer", "nltk.stem.snowball.SnowballStemmer", "nltk.sem.drt.DrtTokens", "nltk.cluster.util.cosine_distance", "nltk.sem.logic.Tokens.NEQ_LIST", "nltk.inference.api.ModelBuilder", "nltk.corpus.propbank.verbs", "nltk.corpus.reader.nombank.NombankChainTreePointer", "nltk.translate.bleu_score.nltk.translate", "nltk.twitter.common.json2csv", "nltk.corpus.reader.wordlist.MWAPPDBCorpusReader", "nltk.corpus.cess_esp", "nltk.corpus.reader.framenet", "nltk.tag.mapping._load_universal_map", "nltk.corpus.twitter_samples.fileids", "nltk.corpus.wordnet.words", "nltk.clean_url", "nltk.corpus.stopwords._get_root", "nltk.book.text8", "nltk.parse.dependencygraph.conll_data2", "nltk.internals", "nltk.internals.import_from_stdlib", "nltk.brill.fntbl37", "nltk.downloader.build_index", "nltk.sem.chat80.sql_query", "nltk.etree.ElementTree.SubElement", "nltk.tag.simplify_tag", "nltk.corpus.conll2002.tagged_words", "nltk.corpus.words.raw", "nltk.parse.load_parser", "nltk.ccg.lexicon.SEMANTICS_RE.match", "nltk.toolbox", "nltk.translate.bleu_score.nltk.translate.bleu_score.sentence_bleu", "nltk.parse.SteppingRecursiveDescentParser", "nltk.corpus.reader.xmldocs.XMLCorpusReader", "nltk.draw.util.SymbolWidget.SYMBOLS", "nltk.ccg.chart.ApplicationRuleSet", "nltk.util.Index", "nltk.classify.senna.Senna", "nltk.draw.util.ColorizedList", "nltk.lm.util.log_base2", "nltk.corpus.brown.sents", "nltk.corpus.reader.util._path_from", "nltk.bleu.append", "nltk.tag.brill.fntbl37", "nltk.data.find", "nltk.tbl.feature.Feature", "nltk.corpus.brown.append", "nltk.sem.logic.LogicalExpressionException", "nltk.util.edges2dot", "nltk.probability.DictionaryProbDist", "nltk.inference.api.BaseProverCommand", "nltk.ccg.chart.printCCGDerivation", "nltk.corpus.indian.raw", "nltk.sentiment.vader.BOOSTER_DICT", "nltk.translate.StackDecoder.valid_phrases", "nltk.corpus.europarl_raw.english", "nltk.__version__", "nltk.translate.bleu", "nltk.sem.logic.Tokens", "nltk.sem.linearlogic.BindingDict", "nltk.cluster.util.euclidean_distance", "nltk.test.tree", "nltk.corpus.mac_morpho.words", "nltk.util.breadth_first", "nltk.cluster.EMClusterer", "nltk.compat.htmlentitydefs", "nltk.corpus.semcor.sents", "nltk.sem.logic.AndExpression",  "nltk.align.ibm1", "nltk.sem.logic.is_indvar", "nltk.corpus.reader.ChunkedCorpusReader.chunked_words", "nltk.corpus.conll2000.tagged_words", "nltk.corpus.stopwords.raw", "nltk.corpus.dependency_treebank", "nltk.book.text1", "nltk.corpus.treebank.words", "nltk.util.ngrams.keys", "nltk.classify.tadm.call_tadm", "nltk.sem.logic.is_eventvar", "nltk.corpus.wordnet.lemma_from_key", "nltk.corpus.reader.pl196x.Pl196xCorpusReader", "nltk.sentiment.util.extract_bigram_feats", "nltk.chunk.regexp.RegexpChunkParser", "nltk.test.probability", "nltk.corpus.reader.api.SyntaxCorpusReader.__init__", "nltk.ccg.lexicon.SEMANTICS_RE", "nltk.corpus.gutenberg.sents", "nltk.tokenize.LegalitySyllableTokenizer", "nltk.probability.KneserNeyProbDist", "nltk.classify.call_mallet", "nltk.probability.ProbabilisticMixIn", "nltk.tokenize.mwe.MWETokenizer.__init__", "nltk.draw.chart", "nltk.tag.stanford.NERTagger", "nltk.stem.snowball", "nltk.tokenize.word_tokenize", "nltk.corpus.reader.wordnet.Lemma", "nltk.corpus.names.append", "nltk.tokenize.punkt.PunktLanguageVars.sent_end_chars", "nltk.corpus.conll2007", "nltk.boolean_ops", "nltk.corpus.reader.nombank.NombankTreePointer", "nltk.classify.tadm.parse_tadm_weights", "nltk.corpus.movie_reviews", "nltk.corpus.conll2002.fileids", "nltk.compat.urlopen", "nltk.twitter.Query", "nltk.corpus.util.LazyCorpusLoader", "nltk.classify.textcat.TextCat", "nltk.stem.porter.PorterStemmer", "nltk.compat.HTTPError", "nltk.corpus.names.raw", "nltk.corpus.reuters.sents", "nltk.align.ibm1.IBMModel1", "nltk.sem.logic.unique_variable", "nltk.corpus.reader.wordnet.NOUN", "nltk.sem.cooper_storage.CooperStore", "nltk.test.rechunkparser", "nltk.corpus.words.copy", "nltk.tokenize.texttiling", "nltk.batch_pos_tag", "nltk.sem.logic.VariableBinderExpression", "nltk.tree.Tree.parse", "nltk.corpus.nps_chat.tagged_posts", "nltk.lm.KneserNeyInterpolated", "nltk.collocations.TrigramAssocMeasures", "nltk.corpus.propbank.instances", "nltk.re.compile", "nltk.stem.WordNetLemmatizer", "nltk.compat.htmlentitydefs.name2codepoint.get", "nltk.corpus.timit.phone_times", "nltk.sem.logic.is_funcvar", "nltk.compat.add_py3_data", "nltk.tree.ProbabilisticTree", "nltk.parse.dependencygraph.DependencyGraph", "nltk.tokenize.util", "nltk.parse.BottomUpLeftCornerChartParser", "nltk.TextCollection", "nltk.ccg.lexicon.CCGVar.reset_id", "nltk.corpus.reader.ConllCorpusReader.iob_sents", "nltk.book.text1.tokens", "nltk.ccg.combinator.ForwardT", "nltk.tokenize.treebank.MacIntyreContractions", "nltk.corpus.indian.tagged_words", "nltk.corpus.brown.categories", "nltk.corpus.reader.util.StreamBackedCorpusView.__init__", "nltk.Tree.convert", "nltk.corpus.stopword", "nltk.translate.stack_decoder", "nltk.corpus.gutenberg.__dir__", "nltk.parse.featurechart.FeatureBottomUpPredictRule", "nltk.featstruct.unify", "nltk.lm.AbsoluteDiscountingInterpolated", "nltk.corpus.reader.api.CorpusReader.fileids", "nltk.tag.HunposTagger", "nltk.corpus.udhr2.fileids", "nltk.corpus.subjectivity.fileids", "nltk.tokenize.moses", "nltk.chunk.named_entity.build_model", "nltk.parse.IncrementalBottomUpChartParser", "nltk.corpus.subjectivity.sents", "nltk.translate.ribes_score.word_rank_alignment", "nltk.compat.binary_type", "nltk.corpus.reader.util.tagged_treebank_para_block_reader", "nltk.corpus.conll2002.sents", "nltk.metrics.scores.precision", "nltk.parse.chart.FilteredSingleEdgeFundamentalRule", "nltk.chunk.regexp.ChunkRule", "nltk.chunk.api", "nltk.collections", "nltk.classify.positivenaivebayes", "nltk.memoize", "nltk.corpus.lin_thesaurus.scored_synonyms", "nltk.tokenize.casual.casual_tokenize", "nltk.corpus.wordnet.get_name", "nltk.corpus.semcor.chunk_sents", "nltk.book", "nltk.sem.linearlogic.AtomicExpression", "nltk.internals.read_str", "nltk.corpus.stopwords.fileids", "nltk.corpus.cess_cat.words", "nltk.parse.chart.FilteredBottomUpPredictCombineRule", "nltk.text", "nltk.corpus.crubadan", "nltk.classify.svm", "nltk.corpus.brown.paras", "nltk.treetransforms.chomsky_normal_form", "nltk.corpus.reader.wordlist", "nltk.corpus.state_union.words", "nltk.corpus.treebank.sents", "nltk.jsontags.JSONTaggedDecoder", "nltk.tokenize", "nltk.twitter.common.json2csv_entities", "nltk.parse.chart.EdgeI", "nltk.translate.gale_church", "nltk.parse.chart.FundamentalRule", "nltk.probability.DictionaryConditionalProbDist", "nltk.featstruct.Feature", "nltk.corpus.wordnet.get_members", "nltk.lm.preprocessing", "nltk.parse.RecursiveDescentParser", "nltk.book.text2", "nltk.sem.lfg", "nltk.stem.PorterStemmer", "nltk.sem.logic.skolem_function", "nltk.draw.tree.TreeWidget", "nltk.corpus.nps_chat.words", "nltk.book.text1.count", "nltk.cfg.Nonterminal", "nltk.corpus.words.fileids", "nltk.re.UNICODE", "nltk.draw.util.OvalWidget", "nltk.compat.htmlentitydefs.entitydefs", "nltk.re.findall", "nltk.classify.rte_classify", "nltk.corpus.verbnet.pprint", "nltk.test", "nltk.corpus.alpino.tagged_sents", "nltk.sem.logic.ExistsExpression", "nltk.parser", "nltk.tokenize.casual.WORD_RE", "nltk.jsontags.register_tag", "nltk.lm.models.Laplace", "nltk.corpus.wordnet.readme", "nltk.tokenize.treebank.TreebankWordTokenizer", "nltk.tree.leaf_treeposition", "nltk.stem.cistem.Cistem.__init__", "nltk.parse.BottomUpChartParser", "nltk.corpus.reader.ConllSRLInstanceList", "nltk.tokenize.sexpr.SExprTokenizer.__init__", "nltk.parse.NonprojectiveDependencyParser", "nltk.tokenize.sent_tokenize", "nltk.tag.Default", "nltk.sem.linearlogic.ImpExpression", "nltk.tokenize.treebank.TreebankWordTokenizer.__init__", "nltk.tokenize.RegexpTokenizer.__init__", "nltk.sem.logic.UnexpectedTokenException", "nltk.corpus.ieer", "nltk.corpus.sentiwordnet", "nltk.corpus.comtrans.aligned_sents", "nltk.compat.Fraction", "nltk.stem.api", "nltk.util.skipgrams", "nltk.translate.bleu_score.Fraction", "nltk.corpus.abc.words", "nltk.translate", "nltk.corpus.wordnet._get_root", "nltk.corpus.mac_morpho.tagged_sents", "nltk.corpora", "nltk.lazyimport", "nltk.corpus.brown.tagged", "nltk.tag.sequential.BigramTagger", "nltk.chunk.util", "nltk.corpus.reader.xmldocs.XMLCorpusReader.xml", "nltk.re.sub", "nltk.sem.logic.Variable", "nltk.corpus.reader.plaintext", "nltk.util.tokenwrap", "nltk.corpus.semcor.xml", "nltk.translate.ibm1", "nltk.tag.DefaultTagger", "nltk.Tree._repr_latex_", "nltk.chunk.ne_chunk", "nltk.tokenize.casual._replace_html_entities", "nltk.corpus.reader.wordnet.ADV", "nltk.draw.cfg", "nltk.stem.cistem", "nltk.bleu", "nltk.parse.featurechart", "nltk.parse.malt", "nltk.compat.Counter",  "nltk.translate.IBMModel", "nltk.tag.stanford.CoreNLPPOSTagger", "nltk.corpus.reader.ConllSRLInstance", "nltk.draw.util.CanvasWidget.__init__", "nltk.ccg.lexicon.augParseCategory", "nltk.classify.PositiveNaiveBayesClassifier", "nltk.book.FreqDist", "nltk.compat.PY3", "nltk.parse.chart.TopDownInitRule", "nltk.parse.chart.TreeEdge.__unicode__", "nltk.tbl.error_list", "nltk.__url__", "nltk.parse.stanford.StanfordParser", "nltk.sem.logic.EntityType", "nltk.grammar.DependencyGrammar.fromstring", "nltk.tree._child_names", "nltk.cfg.CFG.parse", "nltk.metrics.distance.masi_distance", "nltk.data.dropna", "nltk.stem.util.prefix_replace", "nltk.corpus.framenet.lus", "nltk.collocations.FreqDist", "nltk.tag.perceptron.AveragedPerceptron", "nltk.sem.drt.DrtVariableExpression", "nltk.tree", "nltk.twitter.TweetViewer", "nltk.corpus.reader.CHILDESCorpusReader", "nltk.sem.logic.operator.or_", "nltk.cluster.util.VectorSpaceClusterer.__init__", "nltk.tag.brill.FastBrillTaggerTrainer", "nltk.tokenizer.LineTokenizer", "nltk.tag.tnt.TnT.__init__", "nltk.classify.naivebayes.NaiveBayesClassifier.train", "nltk.tbl.feature", "nltk.tag.mapping.map_tag", "nltk.grammar.DependencyGrammar", "nltk.corpus.verbnet.lemmas", "nltk.data.ZipFilePathPointer", "nltk.chunk.conllstr2tree", "nltk.stem.snowball.FrenchStemmer", "nltk.tag.brill.ProximateWordsRule", "nltk.corpus.framenet.frame_relations", "nltk.parse.chart.TreeEdge", "nltk.tgrep", "nltk.corpus.reader.api.CategorizedCorpusReader", "nltk.tag.mapping", "nltk.tree.tree.Tree.__repr__", "nltk.compat.ProxyDigestAuthHandler", "nltk.corpus.reader.ChunkedCorpusReader.tagged_words", "nltk.sem.logic.BinaryExpression", "nltk.sem.drt.DrtTokens.CLOSE_BRACKET", "nltk.lm.smoothing.KneserNey", "nltk.book.text3", "nltk.corpus.words", "nltk.stem.isri.ISRIStemmer.__init__", "nltk.chat.bots", "nltk.corpus.wordnet.wordnet_util.remove_person_name", "nltk.translate.ribes_score", "nltk.corpus.timit.fileids", "nltk.collocations.QuadgramCollocationFinder", "nltk.corpus.inaugural", "nltk.classify.senna", "nltk.corpus.movie_reviews.fileids", "nltk.chunk.accuracy", "nltk.sem.logic.TRUTH_TYPE", "nltk.cfg.CFGProduction", "nltk.corpus.opinion_lexicon.positive", "nltk.corpus.verbnet.frames", "nltk.corpus.find_corpus_file", "nltk.app.concordance", "nltk.corpus.abc.sents", "nltk.twitter.util.credsfromfile", "nltk.parse.generate.generate", "nltk.maxent.ConditionalExponentialClassifier.train", "nltk.chat.eliza.eliza_chatbot.respond", "nltk.corpus.reader.dependency", "nltk.corpus.wordnet.wordnet_util.group_senses_by_pos", "nltk.corpus.reuters.readme", "nltk.tag.util", "nltk.word_tokenize", "nltk.chunk.util.accuracy", "nltk.internals._java_options", "nltk.corpus.framenet.documents", "nltk.corpus.reader.conll.ConllCorpusReader.NE", "nltk.tokenize.blankline_tokenize", "nltk.tag.ClassifierBasedPOSTagger", "nltk.classify.Senna", "nltk.grammar.is_nonterminal", "nltk.ccg.lexicon.CCGVar", "nltk.tbl.demo", "nltk.__maintainer_email__", "nltk.util.acyclic_breadth_first", "nltk.tag.hmm.demo_pos", "nltk.tag.brill.Word", "nltk.corpus.treebank_chunk.chunked_sents", "nltk.treetransforms", "nltk.metrics.BigramAssocMeasures", "nltk.grammar.FeatureGrammar.fromstring", "nltk.downloader.download_dir", "nltk.FreqDist", "nltk.internals.abstract", "nltk.tree.ImmutableTree.convert", "nltk.FreqDist.hapaxes", "nltk.app.chartparser", "nltk.corpus.europarl_raw", "nltk.draw.tree.node", "nltk.probability.ConditionalProbDist", "nltk.corpus.ppattach", "nltk.corpus.reader.wordnet.POS_LIST", "nltk.stem.wordnet.WordNetLemmatizer", "nltk.decorators.memoize", "nltk.translate.ibm_model.Counts", "nltk.inference.prover9.Prover9CommandParent", "nltk.corpus.gazetteers", "nltk.chunk.regexp.RegexpChunkRule.parse", "nltk.parse.stanford", "nltk.sentiment.util.extract_unigram_feats", "nltk.collocations.BigramAssocMeasures.pmi", "nltk.tag.RegexpTagger", "nltk.grammar.toy_pcfg1", "nltk.corpus.names.fileids", "nltk.draw.tree.TreeSegmentWidget", "nltk.parse.util.taggedsent_to_conll", "nltk.classify.svm.SvmClassifier", "nltk.corpus.toolbox.entries", "nltk.sem.logic.ANY_TYPE.unicode", "nltk.tag.hunpos.HunposTagger", "nltk.draw.srparser", "nltk.collocations.AbstractCollocationFinder", "nltk.wordnet", "nltk.ccg.lexicon.CCGLexicon", "nltk.corpus.cess_esp.tagged_words", "nltk.corpus.floresta.tagged_words", "nltk.classify.MultiClassifierI", "nltk.__file__", "nltk.corpus.reader.ChunkedCorpusReader.sents", "nltk.ccg.combinator.BackwardApplication", "nltk.tag._get_tagger", "nltk.parse.chart.BU_LC_STRATEGY", "nltk.corpus.movie_reviews.words", "nltk.corpus.sentiwordnet.ensure_loaded", "nltk.corpus.stopwords.__dict__", "nltk.probability.LaplaceProbDist.logprob", "nltk.utilities", "nltk.tokenize.regexp.WhitespaceTokenizer", "nltk.corpus.inaugural.raw", "nltk.corpus.reader.util.ZipFilePathPointer", "nltk.corpus.reader.util.concat", "nltk.sem.logic.Type", "nltk.corpus.treebank._fileids", "nltk.ccg.lexicon.Token", "nltk.corpus.verbnet.vnclass", "nltk.decorators", "nltk.parse.stanford.GenericStanfordParser", "nltk.corpus.reader.ConllCorpusReader.raw", "nltk.compat.integer_types", "nltk.model.ngram", "nltk.metrics.TrigramAssocMeasures.likelihood_ratio", "nltk.brill", "nltk.compat.URLError", "nltk.parse.chart.TreeEdge.__cmp__", "nltk.tokenize.toktok", "nltk.cluster.em.EMClusterer", "nltk.corpus.nombank.rolesets", "nltk.help.brown_tagset", "nltk.metrics.scores.f_measure", "nltk.compat.iteritems", "nltk.corpus.reader.tagged.TaggedCorpusReader.__init__", "nltk.corpus.opinion_lexicon.words", "nltk.draw.util.CanvasWidget.__setitem__", "nltk.inference.api", "nltk.corpus.framenet.docs", "nltk.compat.unicode_repr", "nltk.Tree._repr_svg_", "nltk.translate.ibm1.IBMModel1", "nltk.tag.sequential.ClassifierBasedPOSTagger", "nltk.corpus.inaugural.readme", "nltk.compat.b", "nltk.tag.sequential.SequentialBackoffTagger", "nltk.tag.stanford.POSTagger", "nltk.util.slice_bounds", "nltk.chat.zen.zen_chatbot", "nltk.tag", "nltk.parser.stanford.StanfordParser", "nltk.tree._pformat_flat", "nltk.corpus.wordnet.ensure_loaded", "nltk.translate.bleu_score.ngrams", "nltk.probability.FreqDist", "nltk.corpus.reader.dependency.DependencyGraph", "nltk.token.Token"];

let labels = ['bigrams', 'parallelize_preprocess', 'expand', 'mark_negation', 'destructive', 'tag', 'extract_rels', 'TypeResolutionException', 'recall', 'BackwardComposition', '__init__', 'root_semrep', 'search', '__hash__', 'api', 'suntsu', 'BrillTagger', 'train', 'Prover9Command', 'tree2conllstr', 'TadmMaxentClassifier', 'TOKENS', 'of2ss', 'SimpleGoodTuringProbDist', 'tagged_sents', 'Direction', 'TreebankWordDetokenizer', 'is_rel', 'count', 'masc_tagged', 'LazyMap', 'untag', 'EarleyChartParser', 'StanfordPOSTagger', 'machado', 'LeftCornerChartParser', 'FeatStructParser', 'TD_STRATEGY', 'collocations', 'nltk', 'grammar', 'unquote_plus', 'add', 'findall', 'from_unified_model_dir', 'InstantiateVarsChart', 'iesha_chatbot', 'inference', 'ensure_loaded', 'align_tokens', 'udhr', 'treeprettyprinter', 'ConditionalProbDistI', 'LogicParser', 'EnglishStemmer', 'encoding', 'FeatureEarleyChartParser', 'insert', 'PlaintextCorpusReader', 'tree2conlltags', 'FeatStruct', '_market_hmm_example', 'NombankSplitTreePointer', 'TextTilingTokenizer', 'words', 'fromstring', 'TweetTokenizer', 'rule', 'ss2of', 'HTTPPasswordMgrWithDefaultRealm', 'vocabulary', 'int2byte', 'PunktWordTokenizer', 'UnificationException', 'do_continue', 'util', 'resolution', 'WordPunctTokenizer', 'KneserNeyInterpolated', '_treebank_word_tokenizer', 'words', 'SennaTagger', 'Text', 'eliza', 'ingrams', 'set_entries', 'readme', 'imap', 'tagged_sents', 'nombank', 'insert', 'wordnet_ic', 'tagged_sents', 'GAAClusterer', 'CFGEditor', 'conlltags2tree', 'stemmer', 'ConllChunkCorpusReader', 'AttrDict', 'synset', 'text6', 'Downloader', '__init__', 'util', 'find_variables', 'Nonterminal', 'negated', 'abspath', 'build_opener', 'counter', 'DecisionTreeClassifier', 'SExprTokenizer', 'ItalianStemmer', '_modified_precision', 'ToktokTokenizer', 'FeatureGrammar', 'KneserNeyProbDist', '__init__', 'everygrams', 'ProximateTagsRule', 'raw', 'doctest_nose_plugin', 'ProxyHandler', 'Pos', 'AbsoluteDiscounting', 'fileids', 'binary_search_file', 'hunpos', 'tokenizer', 'NgramTagger', 'gleu_score', 'QuadgramAssocMeasures', 'readme', 'train', 'MIN_PROB', 'AbstractDrs', 'german', 'config_megam', 'split', 'TweetWriter', 'PropertyIndirectionI', 'Dendrogram', 'lemmer', 'token', 'ApplicationExpression', 'ADJ', '__init__', 'ic', 'ConcordanceIndex', 'attachments', 'StanfordTokenizer', 'ALGORITHMS', 'util', 'propbank', 'EqualityExpression', 'xrange', '_counter', 'CoreNLPParser', 'synset_from_pos_and_offset', 'readme', 'DanishStemmer', 'maxent', 'DefaultTagger', 'ExpectedMoreTokensException', 'RandomChartParser', 'MutableOptionMenu', '__init__', 'spanish', 'ChartParser', 'in_idle', 'align', 'BackwardBx', 'TrigramAssocMeasures', 'parse_output', 'replace', 'reset_id', 'senti_synset', 'MWETokenizer', 'LancasterStemmer', 'accuracy', 'SequenceWidget', 'find_jar', 'model4_prob_t_a_given_s', 'categories', 'UnsortedChartParser', 'string_span_tokenize', 'entries', 'casual', 'token', 'get_im_class', 'load', 'findall', 'conll2002', 'word_', 'demo', 'DoctestFix', 'SymbolWidget', 'instances', 'frames', 'ANY_TYPE', 'subjectivity', 'tokenizer', 'accuracy', 'VerbnetCorpusReader', 'parses', '__init__', 'LeafInitRule', '__hash__', 'ProbDistI', 'parse_valuation', 'classids', 'TYPE', 'DrtOrExpression', 'api', 'add_metaclass', 'from_words', 'parser', 'hmm', 'StackDecoder', 'aline', 'LeafEdge', 'CategorizedPlaintextCorpusReader', 'IBMModel2', 'add', 'NEChunkParserTagger', 'MULTILINE', 'segmentation', '__init__', 'NgramTagger', 'simplify', 'perceptron', 'outf_writer_compat', 'likelihood_ratio', 'similarity', 'fromstring', 'fileids', 'ElementTree', 'Production', 'Trie', 'elementtree_indent', 'api', 'nouns', 'bigrams', 'Table', 'clause', 'read_regexp_block', 'Expression', 'SennaNERTagger', 'logic', 'scikitlearn', 'ic', 'alpino', 'StackDecoder', 'tagged_sents', 'classify', 'reorder_groups', 'SennaChunkTagger', 'UnificationFailure', 'delta', 'text5', 'lm', 'is_writable', 'FeatureEmptyPredictRule', 'posts', 'StemmerI', 'fileids', 'SteppingShiftReduceParser', '__maintainer__', 'EntryDialog', 'semcor', 'collocations', 'sql_demo', 'WordListCorpusReader', 'ImmutableProbabilisticMixIn', 'comtrans', 'StupidBackoff', 'BrillTaggerTrainer', 'words', 'senna', 'corpus_chrf', 'append', 'read_grammar', 'sem', 'find_file', 'words', 'BlanklineTokenizer', 'print_string', 'Valuation', 'BigramAssocMeasures', 'get_random_synset', 'clify', 'api', 'accuracy', 'propbank', 'BottomUpLeftCornerChartParser', 'conllstr2tree', 'swadesh', 'EventVariableExpression', 'open', 'lemmas', 'read_blankline_block', 'corpus_gleu', 'generate', 'EarleyChartParser', 'ProxyBasicAuthHandler', 'framenet', '_fileids', 'lemmatize', 'bleu_score', 'append', 'simplify_indian_tag', 'ImmutableProbabilisticTree', 'AbstractLazySequence', 'DrtApplicationExpression', 'IncrementalBottomUpLeftCornerChartParser', 'install', 'megam', 'TemporaryDirectory', 'fromstring', 'chunk', 'show_cfg', 'collapse_unary', 'transitionparser', 'concordance', 'fromstring', 'dict', 'corpus_bleu', 'rte_features', 'StanfordTagger', 'ProverCommandDecorator', '_unload', 'grow_diag_final_and', 'tableau', 'AllExpression', 'wordnet', 'NorwegianStemmer', 'names_demo', 'parsed_sents', 'gdfa', 'comparisons', '_log_add', 'ibm2', 'read', 'sents', 'tree_labeled', 'paras', 'columns', 'files', 'fileids', 'get', 'words', '__init__', 'TimitCorpusReader', 'tagged_words', 'ProjectiveDependencyParser', 'wordnet_util', 'TrigramCollocationFinder', 'OrderedDict', '_parse', 'MARTIN_EXTENSIONS', 'collapse_unary', 'wsd', 'words', 'srl_instances', 'sents', '_treebank_word_tokenize', 'BottomUpPredictRule', 'chat', 'BoxWidget', 'SeekableUnicodeStreamReader', 'all_synsets', 'sents', 'dependencygraph', 'Vocabulary', 'write_tadm_file', 'fileids', 'shakespeare', 'tree_to_treesegment', 'HiddenMarkovModelTagger', 'train', 'abspath', 'confusionmatrix', 'NonprojectiveDependencyParser', 'name2codepoint', 'rdparser', 'MacIntyreContractions', 'loc', 'NegatedExpression', 'read_valuation', 'root', 'SHIFT', '__getitem__', 'python_2_unicode_compatible', 'prettyprinter', '__init__', 'italian', 'remove_handles', 'api', 'Smoothing', 'text_type', 'reviews', 'tagstr2tree', 'split_and_clean_norm_entries', 'fromstring', 'kmeans', 'TokenReaderI', 'findall', 'CorpusReader', 'ImmutableTree', 'ParentedTree', 'compile_regexp_to_noncapturing', 'RandomProbDist', 'opinion_lexicon', 'Deprecated', 'IBMModel3', 'read_timit_block', 'Unigram', 'wordnet', 'FeatStructReader', '__init__', 'senseval', 'Configuration', 'convert', 'TopDownPredictRule', 'ClusterI', 'BllipParser', 'demo_grammar', 'mwe', 'sents', 'abspath', 'evaluate', 'jaccard_distance', 'padded_everygrams', 're_show', 'span_tokenize', 'nonterminals', 'ViterbiParser', 'open', 'chunked_sents', 'StatisticalDependencyGrammar', 'ConditionalExponentialClassifier', 'ChunkParserI', 'em', 'Error', 'chunked_sents', 'api', 'IBMModel5', 'raise_unorderable_types', 'LEFT_ARC', 'flatten', '__init__', 'iselement', 'entropy', 'taggedsents_to_conll', 'chunked_words', 'instances', 'DrtGlue', 'SentimentIntensityAnalyzer', 'TransitionParser', 're', 'stanford', 'fileids', 'tgrep_tokenize', 'regexp_tokenize', 'words', 'DrtEqualityExpression', 'ConstantExpression', 'LEAF', 'twitter', 'sents', 'FileSystemPathPointer', 'total_ordering', 'read_logic', 'bracket_parse', 'write_megam_file', 'to_sfm_string', 'itervalues', 'words', 'ContingencyMeasures', '__init__', 'Model', 'ontology', 'FStructure', 'OrExpression', 'sentence_chrf', 'MLEProbDist', 'pairwise', 'regexp', 'TrigramTagger', 'parsed_sents', '__file__', 'chrf_score', '_synset_from_pos_and_offset', '_value', 'rte', 'morphy', 'api', 'build_display_tree', 'timit', 'util', 'NISTTokenizer', '__init__', '__init__', 'EPSILON', 'FeatureTopDownPredictRule', 'parsed_sents', 'lch_similarity', 'AlignedSent', 'Chat', 'WittenBellProbDist', 'BracketParseCorpusReader', 'CompositionRuleSet', 'sub', 'tagged_words', 'pos_tag_sents', 'mallet', 'ResolutionProverCommand', '__init__', 'api', 'TextWidget', 'DrtGlueReadingCommand', 'synset', 'Chart', '__init__', 'tuples', 'UnigramTagger', 'verbnet', 'mace', 'sents', 'app', 'position_of_ngram', 'lesk', 'demo', 'sents', 'ChartParse', 'punkt', 'nist', 'raw', 'regexp_span_tokenize', 'Expression', 'AbstractChartRule', 'GermanStemmer', 'parse', 'resolve_anaphora', 'synsets', 'train', 'InconsistentTypeHierarchyException', 'AnnotationTask', 'suffix_replace', 'strings', 'Tree', 'data', 'buildindexes', 'subtrees', 'DRS', 'get', 'sum_logs', 'ConfusionMatrix', 'EmptyPredictRule', 'treebank', 'spearman_correlation', 'PunktSentenceTokenizer', 'deprecated', 'ChunkParserI', '__init__', 'gzip_open_unicode', '__init__', 'expand', 'ImpExpression', 'Prover9Parent', 'six', 'from_documents', 'ensure_loaded', 'words', 'acyclic_branches_depth_first', 'plot', '_MAPPINGS', 'probability', 'tree', 'py25', 'download', 'bracket_parse', 'align', 'words', 'docs', '__init__', 'train', '__init__', 'treebank', '__init__', 'ElementTree', 'WordNetCorpusReader', '_Stack', '__init__', 'concordance', 'topk_groups', 'categories', 'wup_similarity', 'brill', 'load', 'num_leaves', 'py3_data', 'filter_groups', 'clone', 'sents', 'names_demo_features', 'dispersion_plot', 'tagged_paras', 'IncrementalLeftCornerChartParser', 'similar', 'metrics', 'StanfordSegmenter', 'CRFTagger', 'chi_sq', 'OPEN_BRACKET', 'BytesIO', 'files', 'ISRIStemmer', 'Valuation', 'RegexpTokenizer', 'Alignment', 'words', 'fileids', 'FeatureBottomUpPredictCombineRule', 'RegexpChunkRule', 'edge_closure', 'read_depgraph', 'ToolboxData', 'fileids', 'parse_megam_weights', 'LinearLogicApplicationException', 'tree', '__init__', 'srparser_app', 'operator', 'PropbankSplitTreePointer', 'get', 'chomsky_normal_form', 'nombank', 'util', 'reuters', 'skipIf', 'collapse_unary', 'choose', 'invert_graph', 'line_tokenize', 'fromstring', 'fileids', 'SingleEdgeFundamentalRule', 'NOUM', 'CLOSE', 'TypeRaiseRuleSet', 'MutableProbDist', '__init__', 'CoreNLPDependencyParser', 'SourcedStringStream', 'chat80', 'train', 'HiddenMarkovModelTrainer', '_create_hmm_tagger', 'naivebayes', 'categories', 'chunks', 'parse_cfg_production', 'AnaphoraResolutionException', 'chktype', 'DependencyGraph', 'ChunkScore', 'nemo', 'fileids', 'gutenberg', 'MaxentClassifier', 'rslp', 'sents', 'append', 'tagged_sents', 'treebank_chunk', 'frames_for_lemma', 'langs', 'agreement', 'porter', 'toy_pcfg2', 'drt', 'readme', 'cmudict', 'tokenized', 'iesha', 'DrtLambdaExpression', 'DiscourseTester', 'fromstring', 'LazyModule', 'app', 'FeaturesetTaggerI', 'jsontags', 'NPSChatCorpusReader', 'CachedTopDownPredictRule', 'VariableExpression', 'distance', 'TreePrettyPrinter', '__init__', 'words', '__str__', 'udhr2', 'category_semantic_arities', 'allcap_differential', 'CCGChartParser', 'xml', 'ImmutableParentedTree', 'SeekableUnicodeStreamReader', 'viterbi', 'tagset_mapping', 'words', 'IffExpression', 'BinaryMaxentFeatureEncoding', 'words', 'ShowText', 'BaseModelBuilderCommand', 'error', 'ieerstr2tree', 'utils', 'reload', 'readme', 'PorterStemmer', 'util', 'Counter', '__init__', 'FeatDict', 'demo', 'INSTALLED', 'Tree', 'french', 'immutable', 'all_senti_synsets', 'Tree', 'floresta', 'xml', 'FeatureChart', 'slice_bounds', 'glue', 'pchart', 'parse_logic', 'lu', 'transitive_closure', 'Mace', 'SwitchboardCorpusReader', 'IBMModel4', 'text7', 'TaggerI', 'cluster', 'SennaNERTagger', 'ConllCorpusReader', 'lancaster', 'ParenWidget', 'wordnet', 'MaxentClassifier', 'load_data', 'api', 'sequential', 'get_expr_arity', 'sentence_bleu', 'MultiParentedTree', 'from_words', 'rude_chat', 'tokenreader', 'parsed_sents', 'MIN_SCORE_FACTOR', 'SentiText', 'single_meteor_score', 'classifier', 'tgrep_compile', 'raw', 'CoreNLPNERTagger', 'tagged_words', 'api', 'rude_chatbot', 'root', '__init__', 'raw', 'rels', 'FeatureEarleyChartParser', 'Template', 'SentimentAnalyzer', 'longest_target_sentence_length', '__init__', '__longdescr__', 'RegexpTagger', 'crf', 'BasicTweetHandler', 'lemmatize', 'load', 'config_java', 'findall', 'spkrid', 'infer_type', 'BottomUpPredictCombineRule', 'arlstem', 'ENTITY_TYPE', 'IGNORE', 'textcat', 'parse_str', 'tbl', 'span_tokenize', 'dispersion', 'skolemize', 'open', 'Bigram', 'tagged_words', '_tree_labeled', 'features', 'ClassifierBasedTagger', 'util', 'OPEN', 'readme', 'Laplace', '_repr_png_', 'sents', 'CoreNLPTokenizer', 'PUNCTUATION', 'from_words', 'sentiwordnet', 'parse_dependency_grammar', 'IllegalTypeException', 'util', 'HiddenMarkovModelTaggerTransformI', 'StringIO', 'ImmutableTree', '__init__', 'sequential', 'BasicType', 'cfg', 'words', 'split', 'ConditionalFreqDist', 'comparative_sentences', 'EVENT_TYPE', 'gaac', 'indian', 'fromstring', 'sents', 'unichr', 'MLE', '__path__', 'eliza_chat', 'treebank_raw', 'simple', 'ArabicStemmer', '__classifiers__', 'draw', 'text9', 'JSONTaggedEncoder', 'chi_sq', 'AbstractVariableExpression', 'tagged_sents', 'demo', 'langs', 'LambdaExpression', 'FeatureChartParser', 'fileids', 'tree2semi_rel', 'sinica_treebank', 'parse', 'ConllCorpusReader', 'words', 'HANG_RE', 'make_valuation', 'LidstoneProbDist', 'meteor_score', 'WittenBellInterpolated', 'NgramModel', 'PCFG', 'normalize_groups', 'str2tuple', 'convert_regexp_to_nongrouping', 'rdparser_app', 'batch_ne_chunk', 'truncate', 'tagged_sents', 'TaggedCorpusReader', 'DecisionTreeClassifier', 'Authenticate', 'find_corpus_fileids', 'PropbankTreePointer', 'qc', 'ngrams', 'words', 'partial_names_demo', 'PhraseTable', 'SentiWordNetCorpusReader', 'ElementWrapper', 'text4', 'class_types', 'word_times', 'tadm', 'RTEFeatureExtractor', 'nonbreaking_prefixes', 'sents', 'fromstring', 'fileids', 'demo', 'Counter', 'wordpunct_tokenize', 'Cistem', 'ADJ_SAT', 'parse_cfg', 'apply_features', 'FileSystemPathPointer', 'parsed_sents', 'ConstantExpression', 'TokenizerI', 'from_documents', 'PCFG', 'simplify_wsj_tag', 'words', 'modified_precision', 'defaultdict', 'ORIGINAL_ALGORITHM', 'demo', 'BottomUpChartParser', 'word', 'spans_to_relative', 'chunked_sents', 'rdparser', 'semi_rel2reldict', 'to_csv', 'ProximateTokensTemplate', 'SyntaxCorpusReader', 'corenlp', 'lemma', 'NgramCounter', 'RegexpStemmer', 'iloc', 'copy', 'negative', 'texts', 'AffixTagger', 'raw', 'sentence_polarity', 'paras', '__init__', 'student_t', 'evaluate', 'corpus_ribes', 'DrtNegatedExpression', 'timit', 'raw', 'fileids', 'nltk', 'ParseException', 'PropbankCorpusReader', 'LanguageModel', 'zen', 'VERB', 'StanfordNERTagger', 'closest_ref_length', 'words', 'cluster', 'chunked_sents', 'ClassifierBasedTagger', 'PunktParameters', 'productions', 'ARC_STANDARD', 'utteranceids', '_lemma_pos_offset_map', 'LazySubsequence', 'util', 'CLOSE', 'parsed_docs', 'extract_fields', 'pk', 'abspath', 'CFG', 'sinica_parse', 'SymmetricProximateTokensTemplate', 'words', 'IBMModel2', 'LongestChartParser', 'induce_pcfg', 'izip', 'Template', 'help', 'chart', 'custom_lemmas', 'synonyms', 'likelihood_ratio', 'ApplicationExpression', 'VectorSpaceClusterer', 'leaves', 'TreeView', 'COMMA', 'util', 'ShiftReduceParser', 'demo', 'chunked_words', 'toolbox', 'transforms', 'QuadgramAssocMeasures', '_NINF', 'get_subclasses', 'ELEProbDist', 'sents', 'getvalue', 'PrimitiveCategory', 'missing_models_message', 'PropbankChainTreePointer', 'TreePrettyPrinter', '__hash__', 'AffixTagger', 'RegexpTokenizer', 'chunked_paras', 'bllip', 'demo', 'upenn_tagset', 'search', 'RSLPSteemer', 'frame', 'xml_posts', 'regexp', 'jaccard', 'SyllableTokenizer', 'fromstring', 'load', 'ParentedTree', 'process_bundle', 'chktype', 'abspath', 'ensure_loaded', 'ngrams', 'raw_freq', 'twitter_samples', 'u', 'words', 'Transition', 'sents', 'api', 'LineTokenizer', 'save_file', 'likelihood_ratio', 'simplify_alpino_tag', 'spkrinfo', 'SLASH', 'demo', 'pad_both_ends', 'overridden', 'train', 'rtuple', 'wordnet', 'abc', 'ibm_model', 'MosesTokenizer', 'un_chomsky_normal_form', 'sentid', 'CFG', 'CCGVar', 'NLTKWordTokenizer', 'tagged_words', 'abspaths', 'TypeException', 'parseLexicon', 'map', 'ALLTEMPLATES', 'path', 'CategorizedBracketParseCorpusReader', 'TweetHandlerI', 'nps_chat', 'sents', 'demo', 'sents', '__init__', 'NEChunkParser', 'reduce_lengthening', 'Streamer', 'parented', 'open', 'Element', 'LazyIteratorList', 'is_terminal', 'extract_test_sentences', 'FeatureTopDownInitRule', 'WittenBell', 'Trigram', 'webtext', 'demo_liu_hu_lexicon', 'SpanishStemmer', 'find_dir', 'SubstituteBindingsI', 'find_jars_within_path', 'chat80', 'words', 'append', 'java', '_Hypothesis', 'ranks_from_scores', 'flatten', 'clean_html', '__keywords__', 'words', 'StreamBackedCorpusView', 'decisiontree', 'read_line_block', 'FramenetCorpusReader', 'fileids', 'all_synsets', 'tagged_words', 'BigramCollocationFinder', 'IndianCorpusReader', 'log_likelihood', 'sexpr', 'pos_tag', 'corpus', 'parse_fcfg', 'pros_cons', '_POS_TAGGER', 'association', 'SklearnClassifier', '_MULTICLASS_NE_CHUNKER', 'stanford', 'treepositions', 'ImmutableParentedTree', '__getattr__', '__hash__', '__init__', 'KMeansClusterer', 'standard_nonterm_parser', 'tokens', 'generate', 'parse_cfg', '__init__', 'DrtProposition', 'vader', 'verbenet', 'conll2000', 'FunctionVariableExpression', 'FeatDict', 'suntsu_chatbot', 'synset', 'WORDS', 'APP', 'get_version', 'parse', 'nltkdemo18', 'bracket_parse', 'featstruct', 'LaplaceProbDist', 'OPEN', 'words', 'rude', 'train', 'padded_everygram_pipeline', 'IncrementalTopDownChartParser', 'split', 'fileids', 'util', 'un_chomsky_normal_form', 'TnT', 'ProbabilisticDependencyGrammar', 'try_port', 'fileids', 'call_megam', 'regexp', 'sentence_ribes', 'update', 'startswith', 'dice', 'paras', 'SteppingChartParser', 'ParserI', 'PerceptronTagger', 'ensure_loaded', 'Assignment', 'tagged_words', 'SExprTokenizer', 'names', 'TypedMaxentFeatureEncoding', 'raw', 'fileids', 'sexpr_tokenize', 'PathPointer', 'read_whitespace_block', 'WeightedGrammar', 'open', '__init__', 'SpaceWidget', 'NombankCorpusReader', 'app', 'text_type', 'combinator', '__doc__', 'download_shell', 'PrimitiveCategory', 'words', 'ForwardComposition', '_pair_iter', '_tagset', '__author__', 'tagged_sents', '_resource_cache', 'Synset', 'binary_names_demo_features', 'DrsDrawer', 'iesha_chat', 'prover9', 'iob_sents', 'categories', 'raw', 'ForwardApplication', 'zen_chat', 'languages', 'words', 'SYMBOLS', 'split', 'jcn_similarity', 'find_jar_iter', 'wordnet', '__init__', 'BooleanExpression', 'NaiveBayesClassifier', 'CanvasWidget', 'chktype', '__init__', 'sentence_gleu', '_PROBABILITY_RE', 'guess_path', 'InsideChartParser', 'scores', 'NLTK_EXTENSIONS', 'LinearLogicParser', 'Alignment', 'trigrams', 'parse_pcfg', 'cess_cat', 'cfg', 'chunkparser', 'models', 'TextCollection', 'concordance', 'linearlogic', 'stanford', 'QuadgramAssocMeasures', 'xmldocs', 'brevity_penalty', 'ModelI', 'ForwardSubstitution', 'util', 'AlignedSent', 'fromstring', 'accuracy', 'raw_input', 'raw', 'Rule', 'dispersion_plot', 'reader', 'tagged_paras', '_read_cfg_production', 'EMOTICON_RE', 'path_similarity', 'sentence_nist', 'sentiment', 'StringTokenizer', 'evaluate_sents', 'split', 'smoothing', 'all_lemma_names', 'raw_freq', 'lin_thesaurus', 'ClassifierI', '_java_bin', 'str', 'TableauProver', 'EMOTICON_RE', 'find_binary', 'downloader', 'skolemize', 'feature_detector', 'SennaChunkTagger', 'get_loc', 'xml_unescape', 'union', 'abspath', 'raw', 'raw', 'extend', 'fileids', 'load', '_downloader', 'brill_trainer', 'raise_error', 'named_entity', 'select', 'Prover', 'Twitter', 'DefaultRuleSet', 'nist_score', 'product_reviews_1', 'UniformProbDist', 'ptb', 'words', '_pos_tag', 'DependencyProduction', 'pretty_print', 'DrtExpression', 'DrtParser', 'download_gui', 'raw', '__init__', 'pmi', 'stem', 'draw_trees', '_morphy', 'jaccard', 'sents', 'ChunkedCorpusReader', '__init__', 'tgrep_positions', 'demo_grammar', 'likelihood_ratio', 'compat', 'mac_morpho', 'sents', 'categories', '__init__', 'FeatStructNonterminal', 'ElementTree', 'unit', 'interval_distance', 'brill24', 'PunktBaseClass', 'CoreNLPServerError', 'is_cjk', 'binary_distance', 'relextract', 'TabTokenizer', 'meteor', 'raw_freq', 'SpaceTokenizer', 'iob_words', 'XMLCorpusView', 'srl_spans', 'read_alignedsent_block', 'roleset', 'fileids', 'phones', 'ContextFreeGrammar', 'fileids', '__license__', 'read_block', 'AlignmentInfo', 'TgrepException', 'rte_classifier', '__init__', 'cooper_storage', 'tuple2str', 'BlanklineTokenizer', 'config_mallet', 'word', 'iob_sents', 'chars', 'conll', 'MaceCommand', 'sent_times', 'extend', 'ne_chunk_sents', 'lu_basic', 'sents', 'suntsu_chat', 'sents', 'Prover9', 'ccg', 'VariableExpression', 'demo', '__init__', 'RegexpTokenizer', 'pos', 'lexicon', 'tagged_words', 'xml', 'words', 'lin_similarity', 'frames_by_lemma', '__init__', 'FeatureSingleEdgeFundamentalRule', '__init__', 'LazyLoader', 'words', 'split', 'IEERCorpusReader', 'docs_metadata', 'pos_tag', 'UTC', 'BigramAssocMeasures', 'etree', 'CRFTagger', 'words', 'RegexpParser', 'TadmEventMaxentFeatureEncoding', 'getproxies', 'stopwords', 'meteor_score', 'fileids', 'usage', 'interpret_sents', 'ConllChunkCorpusReader', '__init__', 'pl196x', 'IndividualVariableExpression', 'srparser', 'readlines', 'chomsky_normal_form', 'types', 'edit_distance', 'append', 'genesis', 'NKJPCorpusReader', 'stanford_segmenter', 'pad_sequence', 'bleu_score', 'words', 'parsed_sents', 'ghd', 'SmoothingFunction', 'pairs', 'brown', 'multext_east', 'ComplexType', 'label', 'words', 'stem', 'chart', 'perluniprops', 'POS', 'string', 'RSLPStemmer', 'UnicodeWriter', 'tgrep_nodes', 'transcription_dict', 'unique_list', 'eliza_chatbot', 'RussianStemmer', 'expand', 'TabTokenizer', 'tagged_words', 'state_union', 'StanfordDependencyParser', 'parse_with_bindops', 'is_installed', 'jaccard', 'CanvasFrame', 'WordNetError', 'tagged_chunks', 'tagged_sents', 'json_tags', 'LazyConcatenation', 'IBMModel1', 'NavieBayesClassifier', 'TopDownChartParser', 'extend', '__init__', 'util', 'sents', 'sents', 'check_megam_config', 'accuracy', 'sents', 'tagged', 'res_similarity', 'phone_trees', 'url2pathname', 'corpus_nist', 'StemmerI', 'maxent', 'sents', 'tagged_paras', '__init__', 'labels', 'fromstring', 'string_types', 'MaltParser', 'table', 'chi_sq', 'words', 'ImmutableMultiParentedTree', 'train', 'FunctionalCategory', 'sourcedstring', 'synsets', 'windowdiff', 'tagged_sents', 'tagged_sents', 'MosesDetokenizer', 'demo', 'CoreNLPServer', 'simplify_brown_tag', 'ARLSTem', 'PunktLanguageVars', 'Lidstone', 'isri', 'fromstring', 'remove', 'raw', 'words', 'tnt', 'information_content', 'align_texts', 'train', 'jaro_similarity', 'synset', 'reflections', 'BackwardT', 'common', 'tagged_sents', 'install_opener', 'model', 'RegexpTokenizer', 'play', 'NEGATE', 'parsed_sents', 'CutoffChecker', 'AffixTagger', 'py26', 'BackwardSx', 'entries', 'startswith', 'sub', '_unload', '__init__', '__init__', 'open', 'frame_by_name', 'senti_synsets', 'paras', 'WhitespaceTokenizer', 'tagged_sents', 'PunktTrainer', 'SnowballStemmer', 'DrtTokens', 'cosine_distance', 'NEQ_LIST', 'ModelBuilder', 'verbs', 'NombankChainTreePointer', 'translate', 'json2csv', 'MWAPPDBCorpusReader', 'cess_esp', 'framenet', '_load_universal_map', 'fileids', 'words', 'clean_url', '_get_root', 'text8', 'conll_data2', 'internals', 'import_from_stdlib', 'fntbl37', 'build_index', 'sql_query', 'SubElement', 'simplify_tag', 'tagged_words', 'raw', 'load_parser', 'match', 'toolbox', 'sentence_bleu', 'SteppingRecursiveDescentParser', 'XMLCorpusReader', 'SYMBOLS', 'ApplicationRuleSet', 'Index', 'Senna', 'ColorizedList', 'log_base2', 'sents', '_path_from', 'append', 'fntbl37', 'find', 'Feature', 'append', 'LogicalExpressionException', 'edges2dot', 'DictionaryProbDist', 'BaseProverCommand', 'printCCGDerivation', 'raw', 'BOOSTER_DICT', 'valid_phrases', 'english', '__version__', 'bleu', 'Tokens', 'BindingDict', 'euclidean_distance', 'tree', 'words', 'breadth_first', 'EMClusterer', 'htmlentitydefs', 'sents', 'AndExpression', 'ibm1', 'is_indvar', 'chunked_words', 'tagged_words', 'raw', 'dependency_treebank', 'text1', 'words', 'keys', 'call_tadm', 'is_eventvar', 'lemma_from_key', 'Pl196xCorpusReader', 'extract_bigram_feats', 'RegexpChunkParser', 'probability', '__init__', 'SEMANTICS_RE', 'sents', 'LegalitySyllableTokenizer', 'KneserNeyProbDist', 'call_mallet', 'ProbabilisticMixIn', '__init__', 'chart', 'NERTagger', 'snowball', 'word_tokenize', 'Lemma', 'append', 'sent_end_chars', 'conll2007', 'boolean_ops', 'NombankTreePointer', 'parse_tadm_weights', 'movie_reviews', 'fileids', 'urlopen', 'Query', 'LazyCorpusLoader', 'TextCat', 'PorterStemmer', 'HTTPError', 'raw', 'sents', 'IBMModel1', 'unique_variable', 'NOUN', 'CooperStore', 'rechunkparser', 'copy', 'texttiling', 'batch_pos_tag', 'VariableBinderExpression', 'parse', 'tagged_posts', 'KneserNeyInterpolated', 'TrigramAssocMeasures', 'instances', 'compile', 'WordNetLemmatizer', 'get', 'phone_times', 'is_funcvar', 'add_py3_data', 'ProbabilisticTree', 'DependencyGraph', 'util', 'BottomUpLeftCornerChartParser', 'TextCollection', 'reset_id', 'iob_sents', 'tokens', 'ForwardT', 'MacIntyreContractions', 'tagged_words', 'categories', '__init__', 'convert', 'stopword', 'stack_decoder', '__dir__', 'FeatureBottomUpPredictRule', 'unify', 'AbsoluteDiscountingInterpolated', 'fileids', 'HunposTagger', 'fileids', 'fileids', 'moses', 'build_model', 'IncrementalBottomUpChartParser', 'sents', 'word_rank_alignment', 'binary_type', 'tagged_treebank_para_block_reader', 'sents', 'precision', 'FilteredSingleEdgeFundamentalRule', 'ChunkRule', 'api', 'collections', 'positivenaivebayes', 'memoize', 'scored_synonyms', 'casual_tokenize', 'get_name', 'chunk_sents', 'book', 'AtomicExpression', 'read_str', 'fileids', 'words', 'FilteredBottomUpPredictCombineRule', 'text', 'crubadan', 'svm', 'paras', 'chomsky_normal_form', 'wordlist', 'words', 'sents', 'JSONTaggedDecoder', 'tokenize', 'json2csv_entities', 'EdgeI', 'gale_church', 'FundamentalRule', 'DictionaryConditionalProbDist', 'Feature', 'get_members', 'preprocessing', 'RecursiveDescentParser', 'text2', 'lfg', 'PorterStemmer', 'skolem_function', 'TreeWidget', 'words', 'count', 'Nonterminal', 'fileids', 'UNICODE', 'OvalWidget', 'entitydefs', 'findall', 'rte_classify', 'pprint', 'test', 'tagged_sents', 'ExistsExpression', 'parser', 'WORD_RE', 'register_tag', 'Laplace', 'readme', 'TreebankWordTokenizer', 'leaf_treeposition', '__init__', 'BottomUpChartParser', 'ConllSRLInstanceList', '__init__', 'NonprojectiveDependencyParser', 'sent_tokenize', 'Default', 'ImpExpression', '__init__', '__init__', 'UnexpectedTokenException', 'ieer', 'sentiwordnet', 'aligned_sents', 'Fraction', 'api', 'skipgrams', 'Fraction', 'words', 'translate', '_get_root', 'tagged_sents', 'corpora', 'lazyimport', 'tagged', 'BigramTagger', 'util', 'xml', 'sub', 'Variable', 'plaintext', 'tokenwrap', 'xml', 'ibm1', 'DefaultTagger', '_repr_latex_', 'ne_chunk', '_replace_html_entities', 'ADV', 'cfg', 'cistem', 'bleu', 'featurechart', 'malt', 'Counter', 'IBMModel', 'CoreNLPPOSTagger', 'ConllSRLInstance', '__init__', 'augParseCategory', 'PositiveNaiveBayesClassifier', 'FreqDist', 'PY3', 'TopDownInitRule', '__unicode__', 'error_list', '__url__', 'StanfordParser', 'EntityType', 'fromstring', '_child_names', 'parse', 'masi_distance', 'dropna', 'prefix_replace', 'lus', 'FreqDist', 'AveragedPerceptron', 'DrtVariableExpression', 'tree', 'TweetViewer', 'CHILDESCorpusReader', 'or_', '__init__', 'FastBrillTaggerTrainer', 'LineTokenizer', '__init__', 'train', 'feature', 'map_tag', 'DependencyGrammar', 'lemmas', 'ZipFilePathPointer', 'conllstr2tree', 'FrenchStemmer', 'ProximateWordsRule', 'frame_relations', 'TreeEdge', 'tgrep', 'CategorizedCorpusReader', 'mapping', '__repr__', 'ProxyDigestAuthHandler', 'tagged_words', 'BinaryExpression', 'CLOSE_BRACKET', 'KneserNey', 'text3', 'words', '__init__', 'bots', 'remove_person_name', 'ribes_score', 'fileids', 'QuadgramCollocationFinder', 'inaugural', 'senna', 'fileids', 'accuracy', 'TRUTH_TYPE', 'CFGProduction', 'positive', 'frames', 'find_corpus_file', 'concordance', 'sents', 'credsfromfile', 'generate', 'train', 'respond', 'dependency', 'group_senses_by_pos', 'readme', 'util', 'word_tokenize', 'accuracy', '_java_options', 'documents', 'NE', 'blankline_tokenize', 'ClassifierBasedPOSTagger', 'Senna', 'is_nonterminal', 'CCGVar', 'demo', '__maintainer_email__', 'acyclic_breadth_first', 'demo_pos', 'Word', 'chunked_sents', 'treetransforms', 'BigramAssocMeasures', 'fromstring', 'download_dir', 'FreqDist', 'abstract', 'convert', 'hapaxes', 'chartparser', 'europarl_raw', 'node', 'ConditionalProbDist', 'ppattach', 'POS_LIST', 'WordNetLemmatizer', 'memoize', 'Counts', 'Prover9CommandParent', 'gazetteers', 'parse', 'stanford', 'extract_unigram_feats', 'pmi', 'RegexpTagger', 'toy_pcfg1', 'fileids', 'TreeSegmentWidget', 'taggedsent_to_conll', 'SvmClassifier', 'entries', 'unicode', 'HunposTagger', 'srparser', 'AbstractCollocationFinder', 'wordnet', 'CCGLexicon', 'tagged_words', 'tagged_words', 'MultiClassifierI', '__file__', 'sents', 'BackwardApplication', '_get_tagger', 'BU_LC_STRATEGY', 'words', 'ensure_loaded', '__dict__', 'logprob', 'utilities', 'WhitespaceTokenizer', 'raw', 'ZipFilePathPointer', 'concat', 'Type', '_fileids', 'Token', 'vnclass', 'decorators', 'GenericStanfordParser', 'raw', 'integer_types', 'ngram', 'likelihood_ratio', 'brill', 'URLError', '__cmp__', 'toktok', 'EMClusterer', 'rolesets', 'brown_tagset', 'f_measure', 'iteritems', '__init__', 'words', '__setitem__', 'api', 'docs', 'unicode_repr', '_repr_svg_', 'IBMModel1', 'ClassifierBasedPOSTagger', 'readme', 'b', 'SequentialBackoffTagger', 'POSTagger', 'slice_bounds', 'zen_chatbot', 'tag', 'StanfordParser', '_pformat_flat', 'ensure_loaded', 'ngrams', 'FreqDist', 'DependencyGraph', 'Token'];

let parents = ['nltk.util', 'nltk.util', 'nltk.tbl.Template', 'nltk.sentiment.util', 'nltk.tokenize', 'nltk.tag.stanford', 'nltk.sem.relextract', 'nltk.sem.logic', 'nltk.metrics.scores', 'nltk.ccg.combinator', 'nltk.corpus.reader.xmldocs.XMLCorpusView', 'nltk.sem', 'nltk.tokenize.casual.EMOTICON_RE', 'nltk.sem.logic.ComplexType', 'nltk.tokenize', 'nltk.chat', 'nltk.tag.brill', 'nltk.classify.BinaryMaxentFeatureEncoding', 'nltk.inference.prover9', 'nltk.chunk', 'nltk.classify.maxent', 'nltk.sem.logic.Tokens', 'nltk.corpus.wordnet', 'nltk.probability', 'nltk.corpus.ptb', 'nltk.ccg.api', 'nltk.tokenize.treebank', 'nltk.sem', 'nltk.book.text3', 'nltk.corpus', 'nltk.util', 'nltk.tag.util', 'nltk', 'nltk.tag.stanford', 'nltk.corpus', 'nltk.parse', 'nltk.featstruct', 'nltk.parse', 'nltk', 'nltk.translate.bleu_score', 'nltk', 'nltk.compat', 'nltk.corpus.stopwords', 'nltk.tokenize.casual.WORD_RE', 'nltk.parse.bllip.BllipParser', 'nltk.parse.featurechart', 'nltk.chat.iesha', 'nltk', 'nltk.corpus.brown', 'nltk.tokenize.util', 'nltk.corpus', 'nltk', 'nltk.probability', 'nltk.sem.logic', 'nltk.stem.snowball', 'nltk.corpus.brown', 'nltk.parse', 'nltk.ccg.chart', 'nltk.corpus.reader.plaintext', 'nltk.chunk.util', 'nltk.featstruct', 'nltk.tag.hmm', 'nltk.corpus.reader.nombank', 'nltk.tokenize.texttiling', 'nltk.corpus.machado', 'nltk.grammar.PCFG', 'nltk.tokenize.casual', 'nltk.tbl', 'nltk.corpus.wordnet', 'nltk.compat', 'nltk.lm', 'nltk.compat', 'nltk.tokenize.punkt', 'nltk.sem.linearlogic', 'nltk.twitter.api.TweetHandlerI', 'nltk.twitter', 'nltk.inference', 'nltk.tokenize.regexp', 'nltk.lm.models', 'nltk.tokenize', 'nltk.corpus.masc_tagged', 'nltk.tag.senna', 'nltk.text', 'nltk.chat', 'nltk.util', 'nltk.ccg.lexicon', 'nltk.corpus.stopwords', 'nltk.compat', 'nltk.corpus.semcor', 'nltk.corpus.reader', 'nltk.data.path', 'nltk.corpus', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.cluster.gaac', 'nltk.draw.cfg', 'nltk.chunk.util', 'nltk', 'nltk.corpus.reader.conll', 'nltk.corpus.reader.framenet', 'nltk.word_tokenize', 'nltk.book', 'nltk.downloader', 'nltk.tag.sequential.SequentialBackoffTagger', 'nltk.test', 'nltk.featstruct', 'nltk.grammar', 'nltk.sentiment.vader', 'nltk.corpus.names', 'nltk.compat', 'nltk.lm', 'nltk.classify.decisiontree', 'nltk.tokenize', 'nltk.stem.snowball', 'nltk.translate.bleu_score', 'nltk.tokenize.toktok', 'nltk.grammar', 'nltk', 'nltk.tag.perceptron.PerceptronTagger', 'nltk.util', 'nltk.tag.brill', 'nltk.corpus.europarl_raw.german', 'nltk.test', 'nltk.compat', 'nltk.tag.brill', 'nltk.lm.smoothing', 'nltk.corpus.ieer', 'nltk.util', 'nltk.tag', 'nltk.test', 'nltk.tag', 'nltk.translate', 'nltk.collocations', 'nltk.corpus.gutenberg', 'nltk.classify.maxent.MaxentClassifier', 'nltk.translate.IBMModel', 'nltk.sem.drt', 'nltk.corpus.europarl_raw', 'nltk.classify.megam', 'nltk.re', 'nltk.twitter', 'nltk', 'nltk.cluster.util', 'nltk', 'nltk', 'nltk.sem.linearlogic', 'nltk.corpus.reader.wordnet', 'nltk.parse.chart.TreeEdge', 'nltk.corpus.wordnet', 'nltk.text', 'nltk.corpus.ppattach', 'nltk.tokenize.stanford', 'nltk.classify.MaxentClassifier', 'nltk.stem', 'nltk.corpus', 'nltk.sem.logic', 'nltk.compat', 'nltk.sem.logic', 'nltk.parse.corenlp', 'nltk.corpus.wordnet', 'nltk.corpus.brown', 'nltk.stem.snowball', 'nltk', 'nltk.tag.sequential', 'nltk.sem.logic', 'nltk.parse.pchart', 'nltk.draw.util', 'nltk.corpus.reader.ConllChunkCorpusReader', 'nltk.corpus.europarl_raw', 'nltk.parse.chart', 'nltk.util', 'nltk', 'nltk.ccg.combinator', 'nltk.metrics', 'nltk.tag.stanford.POSTagger', 'nltk.data', 'nltk.ccg.api.CCGVar', 'nltk.corpus.sentiwordnet', 'nltk.tokenize.mwe', 'nltk.stem.lancaster', 'nltk.classify.util', 'nltk.draw.util', 'nltk.internals', 'nltk.translate.IBMModel4', 'nltk.corpus.subjectivity', 'nltk.parse.pchart', 'nltk.tokenize.util', 'nltk.corpus.cmudict', 'nltk.tokenize', 'nltk.test', 'nltk.compat', 'nltk.help', 'nltk.sentiment.util.EMOTICON_RE', 'nltk.corpus', 'nltk', 'nltk.draw.srparser', 'nltk.test.doctest_nose_plugin', 'nltk.draw.util', 'nltk.corpus.senseval', 'nltk.corpus.framenet', 'nltk.sem.logic', 'nltk.corpus', 'nltk', 'nltk.classifier', 'nltk.corpus', 'nltk.ccg.chart', 'nltk.probability.ImmutableProbabilisticMixIn', 'nltk.parse.chart', 'nltk.featstruct.FeatStruct', 'nltk.probability', 'nltk.sem', 'nltk.corpus.verbnet', 'nltk.featstruct', 'nltk.sem.drt', 'nltk.twitter', 'nltk.six', 'nltk.collocations.TrigramCollocationFinder', 'nltk.test', 'nltk.tag', 'nltk.translate', 'nltk.metrics', 'nltk.parse.chart', 'nltk.corpus.reader.plaintext', 'nltk.align.ibm2', 'nltk.corpus.words', 'nltk.chunk.named_entity', 'nltk.re', 'nltk.metrics', 'nltk.corpus.reader.api.CorpusReader', 'nltk.tag.sequential', 'nltk.tag', 'nltk.tag', 'nltk.twitter.common', 'nltk.collocations.BigramAssocMeasures', 'nltk.corpus.lin_thesaurus', 'nltk.sem.linearlogic.Expression', 'nltk.corpus.rte', 'nltk.etree.ElementTree', 'nltk.grammar', 'nltk.util', 'nltk.util', 'nltk.ccg', 'nltk.corpus.nombank', 'nltk.book', 'nltk.draw.table', 'nltk.sem.relextract', 'nltk.corpus.reader.util', 'nltk.sem.linearlogic', 'nltk.tag.senna', 'nltk.sem', 'nltk.classify', 'nltk.corpus.wordnet_ic', 'nltk.corpus', 'nltk.translate.stack_decoder', 'nltk.corpus.indian', 'nltk', 'nltk.corpus.wordnet.wordnet_util', 'nltk.tag.senna', 'nltk.featstruct', 'nltk.metrics.aline', 'nltk.book', 'nltk', 'nltk.internals', 'nltk.parse.featurechart', 'nltk.corpus.nps_chat', 'nltk.stemmer', 'nltk.corpus.nps_chat', 'nltk.parse', 'nltk', 'nltk.draw.util', 'nltk.corpus', 'nltk.book.text3', 'nltk.sem.chat80', 'nltk.corpus.reader.wordlist', 'nltk.probability', 'nltk.corpus', 'nltk.lm', 'nltk.tag.brill_trainer', 'nltk.corpus.comtrans', 'nltk.tag', 'nltk.translate.chrf_score', 'nltk.util.ngrams', 'nltk.grammar', 'nltk', 'nltk.internals', 'nltk.corpus.reuters', 'nltk.tokenize', 'nltk', 'nltk.sem.evaluate', 'nltk.metrics.association', 'nltk.corpus.wordnet', 'nltk', 'nltk.tag', 'nltk.clify', 'nltk.corpus.reader', 'nltk.parse.chart', 'nltk.chunk.util', 'nltk.corpus', 'nltk.sem.logic', 'nltk.corpus.webtext', 'nltk.corpus.wordnet', 'nltk.corpus.reader.util', 'nltk.translate.gleu_score', 'nltk.parse', 'nltk.parse', 'nltk.compat', 'nltk.corpus', 'nltk.corpus.stopwords', 'nltk.stem.WordNetLemmatizer', 'nltk.translate', 'nltk.data.path', 'nltk.tag', 'nltk.tree.immutable', 'nltk.util', 'nltk.sem.drt', 'nltk.parse', 'nltk', 'nltk.classify', 'nltk.compat', 'nltk.chunk.regexp.RegexpChunkRule', 'nltk', 'nltk.data', 'nltk.tree.Tree', 'nltk.parse', 'nltk.book.text3', 'nltk.translate.Alignment', 'nltk.corpus.cmudict', 'nltk.translate.bleu_score', 'nltk.classify.rte_classify', 'nltk.tag.stanford', 'nltk.inference.api', 'nltk.corpus.wordnet', 'nltk.translate.gdfa', 'nltk.inference', 'nltk.sem.logic', 'nltk.stem', 'nltk.stem.snowball', 'nltk.classify.util', 'nltk.corpus.ptb', 'nltk.translate', 'nltk.corpus.comparative_sentences', 'nltk.tag.hmm', 'nltk.align', 'nltk.corpus.names', 'nltk.corpus.europarl_raw.spanish', 'nltk.DependencyGraph', 'nltk.corpus.reuters', 'nltk.data', 'nltk.corpus.state_union', 'nltk.corpus.udhr', 'nltk.corpus.stopwords.__dict__', 'nltk.corpus.subjectivity', 'nltk.parse.chart.Chart', 'nltk.corpus.reader.timit', 'nltk.corpus.brown', 'nltk.parse', 'nltk.corpus.wordnet', 'nltk.collocations', 'nltk.util', 'nltk.corpus.reader.bracket_parse.BracketParseCorpusReader', 'nltk.stem.porter.PorterStemmer', 'nltk.treetransforms', 'nltk', 'nltk.corpus.ptb', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.corpus.comtrans', 'nltk.tokenize', 'nltk.parse.chart', 'nltk', 'nltk.draw.util', 'nltk.corpus.reader', 'nltk.corpus.wordnet', 'nltk.corpus.sentence_polarity', 'nltk.parse', 'nltk.lm.vocabulary', 'nltk.classify.tadm', 'nltk.corpus.shakespeare', 'nltk.corpus', 'nltk.draw.tree', 'nltk.tag.hmm', 'nltk.classify.PositiveNaiveBayesClassifier', 'nltk.corpus.twitter_samples', 'nltk.metrics', 'nltk', 'nltk.compat.htmlentitydefs', 'nltk.app', 'nltk.tokenize.destructive', 'nltk.data', 'nltk.sem.logic', 'nltk.sem', 'nltk.corpus.brown', 'nltk.parse.transitionparser.Transition', 'nltk.draw.util.CanvasWidget', 'nltk.compat', 'nltk.tree', 'nltk.stem.wordnet.WordNetLemmatizer', 'nltk.corpus.europarl_raw', 'nltk.tokenize.casual', 'nltk.translate', 'nltk.lm.api', 'nltk.six', 'nltk.corpus.product_reviews_1', 'nltk.chunk', 'nltk.corpus.wordnet.wordnet_util', 'nltk.tree.tree.Tree', 'nltk.cluster', 'nltk.tokenreader', 'nltk.book.text3', 'nltk.corpus.reader.api', 'nltk.tree.immutable', 'nltk.tree.parented', 'nltk.internals', 'nltk.probability', 'nltk.corpus', 'nltk.internals', 'nltk.translate', 'nltk.corpus.reader.timit', 'nltk.tag', 'nltk.corpus.reader', 'nltk.featstruct', 'nltk.stem.snowball.SnowballStemmer', 'nltk.corpus', 'nltk.parse.transitionparser', 'nltk.tree.ParentedTree', 'nltk.parse.chart', 'nltk.cluster.api', 'nltk.parse.bllip', 'nltk.parse.chart', 'nltk.tokenize', 'nltk.corpus.treebank_raw', 'nltk.corpus.europarl_raw.french', 'nltk.chunk.ChunkParserI', 'nltk.metrics.distance', 'nltk.lm.preprocessing', 'nltk', 'nltk.RegexpTokenizer', 'nltk.grammar', 'nltk.parse.viterbi', 'nltk.corpus.brown', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.grammar', 'nltk.maxent', 'nltk.chunk.api', 'nltk.cluster', 'nltk.sem.evaluate', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.cluster', 'nltk.translate', 'nltk.internals', 'nltk.parse.transitionparser.Transition', 'nltk.util', 'nltk.probability.FreqDist', 'nltk.etree.ElementTree', 'nltk.probability', 'nltk.parse.util', 'nltk.corpus.conll2000', 'nltk.corpus.nombank', 'nltk.sem.glue', 'nltk.sentiment.vader', 'nltk.parse.transitionparser', 'nltk', 'nltk.parser', 'nltk.corpus.swadesh', 'nltk.tgrep', 'nltk.tokenize', 'nltk.corpus.nonbreaking_prefixes', 'nltk.sem.drt', 'nltk.sem.logic', 'nltk.util.Trie', 'nltk', 'nltk.corpus.mac_morpho', 'nltk.corpus.reader.util', 'nltk.compat', 'nltk.sem', 'nltk.tree', 'nltk.classify.megam', 'nltk.toolbox', 'nltk.compat', 'nltk.corpus.europarl_raw.english', 'nltk.metrics', 'nltk.tokenize.regexp.WhitespaceTokenizer', 'nltk.sem.evaluate', 'nltk.ccg.lexicon', 'nltk.sem.lfg', 'nltk.sem.logic', 'nltk.translate.chrf_score', 'nltk.probability', 'nltk.util', 'nltk.chunk', 'nltk.tag.sequential', 'nltk.corpus.dependency_treebank', 'nltk.metrics', 'nltk.translate', 'nltk.corpus.wordnet', 'nltk.sem.logic._counter', 'nltk.corpus', 'nltk.corpus.wordnet', 'nltk.parse', 'nltk.Tree', 'nltk.corpus.reader', 'nltk.draw', 'nltk.tokenize.nist', 'nltk.tokenize.simple.LineTokenizer', 'nltk.sem.drt.DrtParser', 'nltk.PCFG', 'nltk.parse.featurechart', 'nltk.corpus.sinica_treebank', 'nltk.corpus.wordnet', 'nltk.align', 'nltk.chat.util', 'nltk.probability', 'nltk.corpus.reader.bracket_parse', 'nltk.ccg.chart', 'nltk.tokenize.casual.HANG_RE', 'nltk.corpus.multext_east', 'nltk.tag', 'nltk.classify', 'nltk.inference.resolution', 'nltk.corpus.reader.plaintext.CategorizedPlaintextCorpusReader', 'nltk.corpus.reader', 'nltk.draw.util', 'nltk', 'nltk.corpus.reader.wordnet', 'nltk.parse.chart', 'nltk.tokenize.regexp.WordPunctTokenizer', 'nltk.corpus.qc', 'nltk.tag.sequential', 'nltk.corpus', 'nltk.inference', 'nltk.corpus.stopwords', 'nltk.app.rdparser_app', 'nltk.translate.ribes_score', 'nltk.wsd', 'nltk.chat.iesha', 'nltk.corpus.europarl_raw.english', 'nltk.parse', 'nltk.tokenize', 'nltk.tokenize', 'nltk.corpus.reuters', 'nltk.tokenize.util', 'nltk.sem.logic', 'nltk.parse.chart', 'nltk.stem.snowball', 'nltk.corpus.reader.xmldocs.ElementTree', 'nltk.sem.drt', 'nltk.wordnet.wordnet', 'nltk.NavieBayesClassifier', 'nltk.sem.logic', 'nltk.metrics.agreement', 'nltk.stem.util', 'nltk.corpus.twitter_samples', 'nltk.tree.tree', 'nltk', 'nltk.corpus.framenet', 'nltk.tree', 'nltk.sem.drt', 'nltk.data', 'nltk.probability', 'nltk.metrics.confusionmatrix', 'nltk.parse.chart', 'nltk.corpus', 'nltk.metrics', 'nltk.tokenize.punkt', 'nltk.internals', 'nltk.chunk', 'nltk.compat.Counter', 'nltk.data', 'nltk.probability.MLEProbDist', 'nltk.tag.brill.Pos', 'nltk.sem.logic', 'nltk.inference.prover9', 'nltk', 'nltk.collocations.TrigramCollocationFinder', 'nltk.corpus.stopwords', 'nltk.corpus.alpino', 'nltk.util', 'nltk.book.text3', 'nltk.tag.mapping', 'nltk', 'nltk.draw', 'nltk.util', 'nltk.downloader', 'nltk.corpus.reader', 'nltk.metrics.aline', 'nltk.corpus.shakespeare', 'nltk.corpus.twitter_samples', 'nltk.stem.porter.PorterStemmer', 'nltk.classify.maxent.TypedMaxentFeatureEncoding', 'nltk.twitter.api.TweetHandlerI', 'nltk.tokenize', 'nltk.parse.chart.ChartParser', 'nltk.etree', 'nltk.corpus.reader.wordnet', 'nltk.translate.stack_decoder', 'nltk.stem.lancaster.LancasterStemmer', 'nltk.book.text1', 'nltk.corpus.wordnet.wordnet_util', 'nltk.corpus.ptb', 'nltk.corpus.wordnet', 'nltk.tag', 'nltk.tokenize', 'nltk.ccg.chart', 'nltk.compat', 'nltk.corpus.wordnet.wordnet_util', 'nltk.ccg.lexicon', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.classify.util', 'nltk.draw.dispersion', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.parse', 'nltk.book.text2', 'nltk', 'nltk.tokenize.stanford_segmenter', 'nltk.tag', 'nltk.metrics.TrigramAssocMeasures', 'nltk.sem.drt.DrtTokens', 'nltk.compat', 'nltk.corpus.treebank', 'nltk.stem.isri', 'nltk', 'nltk.tokenize.regexp', 'nltk.translate', 'nltk.corpus.genesis', 'nltk.corpus.reuters', 'nltk.parse.featurechart', 'nltk.chunk.regexp', 'nltk.util', 'nltk.sem.lfg.FStructure', 'nltk.toolbox', 'nltk.corpus.abc', 'nltk.classify.megam', 'nltk.sem.linearlogic', 'nltk.tree', 'nltk.text.ConcordanceIndex', 'nltk.app', 'nltk.sem.logic', 'nltk.corpus.reader.propbank', 'nltk.corpus.sentiwordnet', 'nltk.tree.transforms', 'nltk.corpus', 'nltk.corpus.reader', 'nltk.corpus', 'nltk.test.unit.utils', 'nltk.tree.transforms', 'nltk.util', 'nltk.util', 'nltk.tokenize', 'nltk.grammar.CFG', 'nltk.corpus.cess_esp', 'nltk.parse.chart', 'nltk.corpus.wordnet', 'nltk.sem.logic.Tokens', 'nltk.ccg.chart', 'nltk.probability', 'nltk.inference.api.BaseProverCommand', 'nltk.parse.corenlp', 'nltk.sourcedstring', 'nltk.sem', 'nltk.classify.maxent.TadmMaxentClassifier', 'nltk.tag.hmm', 'nltk.tag.hmm', 'nltk.classify', 'nltk.corpus.reuters', 'nltk.corpus.semcor', 'nltk.grammar', 'nltk.sem.drt', 'nltk', 'nltk', 'nltk.chunk.util', 'nltk.app', 'nltk.corpus.nombank', 'nltk.corpus', 'nltk.classify.maxent', 'nltk.stem', 'nltk.corpus.inaugural', 'nltk.corpus.words', 'nltk.corpus.cess_cat', 'nltk.corpus', 'nltk.corpus.verbnet', 'nltk.corpus.wordnet', 'nltk.metrics', 'nltk.stem', 'nltk.grammar', 'nltk.sem', 'nltk.corpus.names', 'nltk.corpus', 'nltk.corpus.twitter_samples', 'nltk.chat', 'nltk.sem.drt', 'nltk', 'nltk.sem.logic.Expression', 'nltk.lazyimport', 'nltk.app.srparser_app', 'nltk.tag.api', 'nltk', 'nltk.corpus.reader', 'nltk.parse.chart', 'nltk.sem.logic', 'nltk.metrics', 'nltk.treeprettyprinter', 'nltk.tag.ClassifierBasedTagger', 'nltk.corpus.cess_esp', 'nltk.parse.chart.TreeEdge', 'nltk.corpus', 'nltk.ccg.lexicon', 'nltk.sentiment.vader', 'nltk.ccg.chart', 'nltk.corpus.shakespeare', 'nltk.tree', 'nltk.data', 'nltk.parse', 'nltk.tag.mapping', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.sem.logic', 'nltk.classify', 'nltk.corpus.indian', 'nltk.draw.util', 'nltk.inference.api', 'nltk.re', 'nltk.chunk', 'nltk.test.unit', 'nltk.compat', 'nltk.corpus.words', 'nltk.stem.snowball', 'nltk.classify', 'nltk.internals', 'nltk.corpus.reader.api.CategorizedCorpusReader', 'nltk.grammar', 'nltk.parse.chart', 'nltk.downloader.Downloader', 'nltk', 'nltk.corpus.europarl_raw', 'nltk.tree', 'nltk.corpus.sentiwordnet', 'nltk.tree', 'nltk.corpus', 'nltk.corpus.toolbox', 'nltk.parse.featurechart', 'nltk.internals', 'nltk.sem', 'nltk.parse', 'nltk.sem', 'nltk.corpus.framenet', 'nltk.util', 'nltk.inference.mace', 'nltk.corpus.reader', 'nltk.translate', 'nltk.book', 'nltk.tag.api', 'nltk.cluster.util.VectorSpaceClusterer', 'nltk.tag', 'nltk.corpus.reader', 'nltk.stem', 'nltk.draw.util', 'nltk.corpus', 'nltk.classify', 'nltk.corpus.reuters', 'nltk.lm', 'nltk.tag', 'nltk.ccg.lexicon.ontology', 'nltk.translate.bleu_score', 'nltk.tree.parented', 'nltk.collocations.BigramCollocationFinder', 'nltk.chat.rude', 'nltk', 'nltk.corpus.treebank', 'nltk.translate.IBMModel5', 'nltk.sentiment.vader', 'nltk.translate.meteor_score', 'nltk', 'nltk.tgrep', 'nltk.corpus.abc', 'nltk.tag.stanford', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.classify', 'nltk.chat.rude', 'nltk.tree.Tree', 'nltk.tokenize.simple.SpaceTokenizer', 'nltk.corpus.genesis', 'nltk.corpora.chat80', 'nltk', 'nltk.tbl', 'nltk.sentiment', 'nltk.translate.ibm_model', 'nltk.probability.ProbabilisticMixIn', 'nltk', 'nltk.tag.sequential', 'nltk.tag', 'nltk.twitter.api', 'nltk.lemmer', 'nltk.data', 'nltk.internals', 'nltk.tokenize.casual.EMOTICON_RE', 'nltk.corpus.timit', 'nltk.ccg.lexicon.ontology', 'nltk.parse.chart', 'nltk.stem', 'nltk.sem.logic', 'nltk.corpus.reader.conll.ConllCorpusReader', 'nltk.classify', 'nltk.internals', 'nltk', 'nltk.tokenize._treebank_word_tokenizer', 'nltk.draw', 'nltk.sem', 'nltk.corpus.treebank', 'nltk.tag', 'nltk.corpus.treebank', 'nltk.DependencyGraph', 'nltk.corpus.product_reviews_1', 'nltk.tag', 'nltk.corpus', 'nltk.sem.drt.DrtTokens', 'nltk.corpus.movie_reviews', 'nltk.lm', 'nltk.tree.Tree', 'nltk.corpus.movie_reviews', 'nltk.tokenize.stanford', 'nltk.tokenize.punkt.PunktSentenceTokenizer', 'nltk.collocations.QuadgramCollocationFinder', 'nltk.corpus.reader', 'nltk.grammar', 'nltk.sem.logic', 'nltk', 'nltk.tag.api', 'nltk.compat', 'nltk.tree', 'nltk.tokenize.casual.TweetTokenizer', 'nltk', 'nltk.sem.logic', 'nltk.test', 'nltk.corpus.cmudict', 'nltk.corpus.words', 'nltk.probability', 'nltk.corpus', 'nltk.sem.logic', 'nltk.cluster', 'nltk.corpus', 'nltk.sem.logic.Type', 'nltk.corpus.cess_esp', 'nltk.compat', 'nltk.lm', 'nltk', 'nltk.chat.eliza', 'nltk.corpus', 'nltk.tokenize', 'nltk.stem.snowball', 'nltk', 'nltk', 'nltk.book', 'nltk.jsontags', 'nltk.metrics.BigramAssocMeasures', 'nltk.sem.logic', 'nltk.corpus.conll2000', 'nltk.classify.positivenaivebayes', 'nltk.wordnet.wordnet', 'nltk.sem.logic', 'nltk.parse.featurechart', 'nltk.corpus.state_union', 'nltk.sem.relextract', 'nltk.corpus', 'nltk', 'nltk.corpus.reader.conll', 'nltk.corpus.gazetteers', 'nltk.tokenize.casual', 'nltk.corpora.chat80', 'nltk.probability', 'nltk.translate', 'nltk.lm', 'nltk.model.ngram', 'nltk', 'nltk.corpus.wordnet.wordnet_util', 'nltk.tag.util', 'nltk.internals', 'nltk.app', 'nltk', 'nltk.compat.StringIO', 'nltk.corpus.brown', 'nltk.corpus.reader.tagged', 'nltk.classify', 'nltk.twitter', 'nltk.corpus.reader.util', 'nltk.corpus.reader.propbank', 'nltk.corpus', 'nltk.collocations', 'nltk.corpus.stopwords', 'nltk.classify.util', 'nltk.translate', 'nltk.corpus.reader.sentiwordnet', 'nltk.internals', 'nltk.book', 'nltk.compat', 'nltk.corpus.timit', 'nltk.classify', 'nltk.classify.rte_classify', 'nltk.corpus', 'nltk.corpus.floresta', 'nltk.Valuation', 'nltk.corpus.comtrans', 'nltk.tbl.demo', 'nltk.collections', 'nltk.tokenize', 'nltk.stem.cistem', 'nltk.corpus.wordnet', 'nltk.cfg', 'nltk.classify.util', 'nltk.data', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.sem.linearlogic', 'nltk.tokenize.api', 'nltk.collocations.BigramCollocationFinder', 'nltk.grammar', 'nltk.tag.simplify', 'nltk.corpus.toolbox', 'nltk.translate.bleu_score', 'nltk', 'nltk.stem.porter.PorterStemmer', 'nltk.parse.featurechart', 'nltk.parse.chart', 'nltk.tokenize', 'nltk.tokenize.util', 'nltk.corpus.conll2000', 'nltk.draw', 'nltk.sem.relextract', 'nltk.corpus.stopwords', 'nltk.tag.brill', 'nltk.corpus.reader.api', 'nltk.parse', 'nltk.corpus.wordnet', 'nltk.lm.counter', 'nltk.stem.regexp', 'nltk.data', 'nltk.data', 'nltk.corpus.opinion_lexicon', 'nltk.book', 'nltk.tag.sequential', 'nltk.corpus.movie_reviews', 'nltk.corpus', 'nltk.corpus.gutenberg', 'nltk.tag.sequential.RegexpTagger', 'nltk.collocations.BigramAssocMeasures', 'nltk.sem', 'nltk.translate.ribes_score', 'nltk.sem.drt', 'nltk.corpus', 'nltk.corpus.gutenberg', 'nltk.corpus.webtext', '', 'nltk.sem.logic', 'nltk.corpus', 'nltk.lm.api', 'nltk.chat', 'nltk.corpus.reader.wordnet', 'nltk.tag.stanford', 'nltk.translate.bleu_score', 'nltk.corpus.words', 'nltk', 'nltk.corpus.conll2002', 'nltk.tag.sequential', 'nltk.tokenize.punkt', 'nltk.tree', 'nltk.parse.transitionparser.TransitionParser', 'nltk.corpus.timit', 'nltk.corpus.wordnet', 'nltk.util', 'nltk.sentiment', 'nltk.sem.drt.DrtTokens', 'nltk.corpus.ieer', 'nltk.twitter.common', 'nltk.metrics.segmentation', 'nltk.corpus.gutenberg', 'nltk.grammar', 'nltk.tree', 'nltk.tag.brill', 'nltk.corpus.timit', 'nltk.translate', 'nltk.parse.pchart', 'nltk', 'nltk.compat', 'nltk.tag.brill', 'nltk', 'nltk.parse', 'nltk.corpus.wordnet', 'nltk.corpus.lin_thesaurus', 'nltk.metrics.QuadgramAssocMeasures', 'nltk.sem.logic', 'nltk.cluster.util', 'nltk.tree', 'nltk.draw.tree', 'nltk.sem.drt.DrtTokens', 'nltk.cluster', 'nltk.parse', 'nltk.draw.chart', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.corpus', 'nltk.tree', 'nltk.metrics.association', 'nltk.tag.hmm', 'nltk.corpus.wordnet', 'nltk.probability', 'nltk.corpus.conll2007', 'nltk.compat.StringIO', 'nltk.ccg.lexicon', 'nltk.tokenize.punkt.PunktSentenceTokenizer', 'nltk.corpus.reader.propbank', 'nltk.tree.prettyprinter', 'nltk.tree.Tree', 'nltk.sequential', 'nltk', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.parse', 'nltk.chat.zen', 'nltk.help', 'nltk.re', 'nltk.stem', 'nltk.corpus.framenet', 'nltk.corpus.nps_chat', 'nltk.tokenize', 'nltk.metrics.TrigramAssocMeasures', 'nltk.tokenize', 'nltk.ccg.lexicon', 'nltk.corpus.sentiwordnet', 'nltk.tree', 'nltk.corpora.chat80', 'nltk.chktype', 'nltk.corpus.stopwords', 'nltk.corpus.words', 'nltk.util', 'nltk.metrics.TrigramAssocMeasures', 'nltk.corpus', 'nltk.compat', 'nltk.corpus.pros_cons', 'nltk.parse.transitionparser', 'nltk.corpus.udhr2', 'nltk.model', 'nltk.tokenize.simple', 'nltk.sentiment.util', 'nltk.metrics.BigramAssocMeasures', 'nltk.tag', 'nltk.corpus.timit', 'nltk.featstruct', 'nltk.chat.rude', 'nltk.lm.preprocessing', 'nltk.internals', 'nltk.classify.svm.SvmClassifier', 'nltk.sem.relextract', 'nltk.wordnet', 'nltk.corpus', 'nltk.translate', 'nltk.tokenize.moses', 'nltk.tree.transforms', 'nltk.corpus.timit', 'nltk.cfg', 'nltk.ccg.api', 'nltk.tokenize.destructive', 'nltk.corpus.cess_cat', 'nltk.corpus.movie_reviews', 'nltk.sem.logic', 'nltk.ccg.lexicon', 'nltk.corpus.stopwords', 'nltk.tbl.Template', 'nltk.data', 'nltk.corpus.reader', 'nltk.twitter.api', 'nltk.corpus', 'nltk.corpus.indian', 'nltk.chat.suntsu', 'nltk.corpus.state_union', 'nltk.tokenize.punkt.PunktSentenceTokenizer', 'nltk.chunk.named_entity', 'nltk.tokenize.casual', 'nltk.twitter', 'nltk.tree', 'nltk.corpus.stopwords', 'nltk.etree.ElementTree', 'nltk.util', 'nltk.grammar', 'nltk.parse.util', 'nltk.parse.featurechart', 'nltk.lm.smoothing', 'nltk.tag', 'nltk.corpus', 'nltk.sentiment.util', 'nltk.stem.snowball', 'nltk.internals', 'nltk.sem.logic', 'nltk.internals', 'nltk.corpora', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.corpus.movie_reviews', 'nltk.internals', 'nltk.translate.stack_decoder', 'nltk.metrics', 'nltk.lm.preprocessing', 'nltk.utilities', 'nltk', 'nltk.corpus.semcor', 'nltk.corpus.reader.util', 'nltk.classify', 'nltk.corpus.reader.util', 'nltk.corpus.reader.framenet', 'nltk.corpus.sinica_treebank', 'nltk.wordnet.wordnet', 'nltk.corpus.nps_chat', 'nltk.collocations', 'nltk.corpus.reader', 'nltk.classify.util', 'nltk.tokenize', 'nltk.tag', 'nltk', 'nltk.grammar', 'nltk.corpus', 'nltk.tag', 'nltk.metrics', 'nltk.classify.scikitlearn', 'nltk.chunk', 'nltk.tokenize', 'nltk.tree', 'nltk.tree.immutable', 'nltk.corpus', 'nltk.sem.logic.Expression', 'nltk.tokenize.regexp.BlanklineTokenizer', 'nltk.cluster.kmeans', 'nltk.grammar', 'nltk.book.text2', 'nltk.probability.ProbDistI', 'nltk.grammar', 'nltk.stem.rslp.RSLPStemmer', 'nltk.sem.drt', 'nltk.sentiment', 'nltk.corpus', 'nltk.corpus', 'nltk.sem.logic', 'nltk.featstruct', 'nltk.chat.suntsu', 'nltk.corpus.sentiwordnet', 'nltk.corpus.reader.conll.ConllCorpusReader', 'nltk.sem.logic', 'nltk.corpus.wordnet', 'nltk.sem.drt.DrtParser', 'nltk.tag.brill', 'nltk.parse', 'nltk', 'nltk.probability', 'nltk.sem.logic.Tokens', 'nltk.corpus.gutenberg', 'nltk.chat', 'nltk.tag.hmm.HiddenMarkovModelTagger', 'nltk.lm.preprocessing', 'nltk.parse', 'nltk.parse.dependencygraph.conll_data2', 'nltk.corpus.gutenberg', 'nltk.lm', 'nltk.treetransforms', 'nltk.tag.tnt', 'nltk.grammar', 'nltk.parse.corenlp', 'nltk.corpus.inaugural', 'nltk.classify.megam', 'nltk.stem', 'nltk.translate.ribes_score', 'nltk.corpus.stopwords', 'nltk.pos_tag', 'nltk.metrics.BigramAssocMeasures', 'nltk.corpus.inaugural', 'nltk.parse.chart', 'nltk.parse.api', 'nltk.tag.perceptron', 'nltk.corpus.gutenberg', 'nltk.sem.evaluate', 'nltk.corpus.mac_morpho', 'nltk.tokenize.sexpr', 'nltk.corpus', 'nltk.classify.maxent', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.corpus.ptb', 'nltk.tokenize.sexpr', 'nltk.data', 'nltk.corpus.reader.util', 'nltk.grammar', 'nltk.corpus.movie_reviews', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.draw.util', 'nltk.corpus', 'nltk', 'nltk.compat', 'nltk.ccg', 'nltk.classify.maxent.MaxentClassifier', 'nltk', 'nltk.ccg.api', 'nltk.corpus.names', 'nltk.ccg.combinator', 'nltk.tokenize.punkt', 'nltk.corpus.cess_esp', 'nltk', 'nltk.corpus.sinica_treebank', 'nltk.data', 'nltk.corpus.reader.wordnet', 'nltk.classify.util', 'nltk.sem.drt', 'nltk.chat.iesha', 'nltk.inference', 'nltk.corpus.conll2002', 'nltk.corpus.movie_reviews', 'nltk.corpus.udhr2', 'nltk.ccg.combinator', 'nltk.chat.zen', 'nltk.stem.snowball.SnowballStemmer', 'nltk.corpus.dependency_treebank', 'nltk.sem.logic.Tokens', 'nltk.tag._POS_TAGGER', 'nltk.corpus.wordnet', 'nltk.internals', 'nltk.app', 'nltk.collocations.AbstractCollocationFinder', 'nltk.sem.logic', 'nltk.classify.naivebayes', 'nltk.draw.util', 'nltk.test', 'nltk.tokenize.simple.TabTokenizer', 'nltk.translate.gleu_score', 'nltk.grammar', 'nltk.twitter.util', 'nltk.parse.pchart', 'nltk.metrics', 'nltk.stem.porter.PorterStemmer', 'nltk.sem.linearlogic', 'nltk.translate.api', 'nltk.util', 'nltk.grammar', 'nltk.corpus', 'nltk', 'nltk.app', 'nltk.lm', 'nltk.text', 'nltk.book.text2', 'nltk.sem', 'nltk.tag', 'nltk.metrics', 'nltk.corpus.reader', 'nltk.translate.bleu_score', 'nltk.model.api', 'nltk.ccg.combinator', 'nltk.parse', 'nltk.translate.api', 'nltk.tree.ImmutableParentedTree', 'nltk.metrics.scores', 'nltk.compat', 'nltk.corpus.twitter_samples', 'nltk.tbl.rule', 'nltk.book.text3', 'nltk.corpus', 'nltk.corpus.mac_morpho', 'nltk.grammar', 'nltk.sentiment.util', 'nltk.corpus.wordnet', 'nltk.translate.nist_score', 'nltk', 'nltk.tokenize.api', 'nltk', 'nltk.grammar.nonterminals', 'nltk.lm', 'nltk.corpus.wordnet', 'nltk.metrics.BigramAssocMeasures', 'nltk.corpus', 'nltk.classify.api', 'nltk.internals', 'nltk.sem.logic.ANY_TYPE', 'nltk.inference.tableau', 'nltk.tokenize.casual', 'nltk.internals', 'nltk', 'nltk.sem.skolemize', 'nltk.tag.ClassifierBasedPOSTagger', 'nltk.tag', 'nltk.data.columns', 'nltk.tokenize.util', 'nltk.corpus.stopwords', 'nltk.corpus.reuters', 'nltk.corpus.webtext', 'nltk.corpus.state_union', 'nltk.corpus.words', 'nltk.corpus.brown', 'nltk.parse.dependencygraph.DependencyGraph', 'nltk.downloader', 'nltk.tag', 'nltk', 'nltk.chunk', 'nltk.ccg.chart', 'nltk.inference.api', 'nltk.twitter', 'nltk.ccg.chart', 'nltk.translate', 'nltk.corpus', 'nltk.probability', 'nltk.corpus', 'nltk.corpus.udhr', 'nltk.tag', 'nltk.grammar', 'nltk.tree', 'nltk.sem.drt', 'nltk.sem.drt', 'nltk', 'nltk.corpus.brown', 'nltk.tag.sequential.NgramTagger', 'nltk.metrics.BigramAssocMeasures', 'nltk.stem.PorterStemmer', 'nltk.draw.tree', 'nltk.corpus.wordnet', 'nltk.metrics.BigramAssocMeasures', 'nltk.corpus.udhr', 'nltk.corpus.reader', 'nltk.corpus.reader.xmldocs.XMLCorpusReader', 'nltk.tgrep', 'nltk.parse.generate', 'nltk.metrics.association.QuadgramAssocMeasures', 'nltk', 'nltk.corpus', 'nltk.corpus.dependency_treebank', 'nltk.corpus.sentence_polarity', 'nltk.tree.tree.Tree', 'nltk.grammar', 'nltk.corpus.reader.xmldocs', 'nltk.test', 'nltk.metrics', 'nltk.tag.brill', 'nltk.tokenize.punkt', 'nltk.parse.corenlp', 'nltk.tokenize.util', 'nltk.metrics.distance', 'nltk.sem', 'nltk.tokenize', 'nltk.translate', 'nltk.collocations.BigramAssocMeasures', 'nltk.tokenize.simple', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.corpus.reader.xmldocs', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.corpus.reader.util', 'nltk.corpus.propbank', 'nltk.corpus.senseval', 'nltk.corpus.timit', 'nltk.grammar', 'nltk.corpus.genesis', 'nltk', 'nltk.corpus.reader.xmldocs.XMLCorpusView', 'nltk.translate.ibm_model', 'nltk.tgrep', 'nltk.classify.rte_classify', 'nltk.TextCollection', 'nltk.sem', 'nltk.tag.util', 'nltk.tokenize.regexp', 'nltk.classify.mallet', 'nltk.corpus.stopwords', 'nltk.corpus.conll2000', 'nltk.corpus.perluniprops', 'nltk.corpus.reader', 'nltk.inference.mace', 'nltk.corpus.timit', 'nltk.data', 'nltk', 'nltk.corpus.framenet', 'nltk.corpus.conll2000', 'nltk.chat.suntsu', 'nltk.corpus.europarl_raw.french', 'nltk.inference.prover9', 'nltk', 'nltk.sem.linearlogic', 'nltk.chat.eliza', 'nltk.sem.logic.LogicParser', 'nltk.tokenizer', 'nltk.tree.Tree', 'nltk.ccg', 'nltk.corpus.ptb', 'nltk.corpus.rte', 'nltk.corpus.floresta', 'nltk.corpus.wordnet', 'nltk.corpus.framenet', 'nltk.parse.dependencygraph.DependencyGraph', 'nltk.parse.featurechart', 'nltk.tag.NgramTagger', 'nltk.data', 'nltk.corpus.sinica_treebank', 'nltk.__version__', 'nltk.corpus.reader', 'nltk.corpus.framenet', 'nltk', 'nltk.compat', 'nltk.collocations', 'nltk', 'nltk.tag.crf', 'nltk.corpus.swadesh', 'nltk.chunk.regexp', 'nltk.classify.maxent', 'nltk.compat', 'nltk.corpus', 'nltk.translate.meteor_score', 'nltk.corpus.treebank', 'nltk', 'nltk', 'nltk.corpus.reader', 'nltk.probability.ConditionalFreqDist', 'nltk.corpus.reader', 'nltk.sem.logic', 'nltk.app', 'nltk.corpus.stopwords', 'nltk.tree.Tree', 'nltk.ccg.lexicon.ontology', 'nltk.metrics.distance', 'nltk.corpus.stopwords', 'nltk.corpus', 'nltk.corpus.reader', 'nltk.tokenize', 'nltk.util', 'nltk.translate.bleu_score.nltk.translate', 'nltk.corpus.inaugural', 'nltk.corpus.floresta', 'nltk.metrics.segmentation', 'nltk.translate.bleu_score', 'nltk.corpus.rte', 'nltk.corpus', 'nltk.corpus', 'nltk.sem.logic', 'nltk.tree', 'nltk.corpus.multext_east', 'nltk', 'nltk.ccg', 'nltk.corpus', 'nltk.corpus.reader.conll.ConllCorpusReader', 'nltk.corpus.twitter_samples', 'nltk.stem.rslp', 'nltk.compat', 'nltk.tgrep', 'nltk.corpus.timit', 'nltk.util', 'nltk.chat.eliza', 'nltk.stem.snowball', 'nltk.tag.brill.Word', 'nltk.tokenize.simple', 'nltk.corpus.sinica_treebank', 'nltk.corpus', 'nltk.parse.stanford', 'nltk.sem.cooper_storage', 'nltk.downloader._downloader', 'nltk.metrics.association.BigramAssocMeasures', 'nltk.draw.util', 'nltk.corpus.reader.wordnet', 'nltk.corpus.semcor', 'nltk.corpus.multext_east', 'nltk.jsontags', 'nltk.util', 'nltk.translate', 'nltk', 'nltk.parse', 'nltk.corpus.stopwords', 'nltk.inference.api.BaseModelBuilderCommand', 'nltk.chat', 'nltk.corpus.genesis', 'nltk.corpus.sinica_treebank', 'nltk.classify.util', 'nltk.tag', 'nltk.corpus.pros_cons', 'nltk.corpus.reader', 'nltk.corpus.wordnet', 'nltk.corpus.timit', 'nltk.compat', 'nltk.translate.nist_score', 'nltk.stem.api', 'nltk.classify', 'nltk.corpus.webtext', 'nltk.corpus.brown', 'nltk.tag.ClassifierBasedPOSTagger', 'nltk.corpus.reuters', 'nltk.tree.ParentedTree', 'nltk.compat', 'nltk.parse.malt', 'nltk.draw', 'nltk.collocations.BigramAssocMeasures', 'nltk.corpus.webtext', 'nltk.tree.immutable', 'nltk.classify.DecisionTreeClassifier', 'nltk.ccg.api', 'nltk', 'nltk.corpus.wordnet', 'nltk.metrics.segmentation', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.corpus.floresta', 'nltk.tokenize.moses', 'nltk.draw.rdparser', 'nltk.parse.corenlp', 'nltk.tag', 'nltk.stem.arlstem', 'nltk.tokenize.punkt', 'nltk.lm', 'nltk.stem', 'nltk.sem.drt.DrtExpression', 'nltk.corpus.stopwords', 'nltk.corpus.udhr', 'nltk.corpus.brown', 'nltk.tag', 'nltk.corpus.reader.wordnet', 'nltk.translate.gale_church', 'nltk.classify.maxent.TadmEventMaxentFeatureEncoding', 'nltk.metrics.distance', 'nltk.corpus.wordnet', 'nltk.chat.util', 'nltk.ccg.combinator', 'nltk.twitter', 'nltk.corpus.treebank', 'nltk.compat', 'nltk', 'nltk.tokenize', 'nltk.corpus.timit', 'nltk.sentiment.vader', 'nltk.corpus.conll2007', 'nltk.classify.util', 'nltk.tag', 'nltk.util', 'nltk.ccg.combinator', 'nltk.corpus.swadesh', 'nltk.__version__', 'nltk.tokenize.casual.EMOTICON_RE', 'nltk.corpus.brown', 'nltk.tokenize.toktok.ToktokTokenizer', 'nltk.tag.sequential.UnigramTagger', 'nltk.corpus.gutenberg', 'nltk.corpus.framenet', 'nltk.corpus.sentiwordnet', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.tokenizer', 'nltk.corpus.cess_esp', 'nltk.tokenize.punkt', 'nltk.stem.snowball', 'nltk.sem.drt', 'nltk.cluster.util', 'nltk.sem.logic.Tokens', 'nltk.inference.api', 'nltk.corpus.propbank', 'nltk.corpus.reader.nombank', 'nltk.translate.bleu_score.nltk', 'nltk.twitter.common', 'nltk.corpus.reader.wordlist', 'nltk.corpus', 'nltk.corpus.reader', 'nltk.tag.mapping', 'nltk.corpus.twitter_samples', 'nltk.corpus.wordnet', 'nltk', 'nltk.corpus.stopwords', 'nltk.book', 'nltk.parse.dependencygraph', 'nltk', 'nltk.internals', 'nltk.brill', 'nltk.downloader', 'nltk.sem.chat80', 'nltk.etree.ElementTree', 'nltk.tag', 'nltk.corpus.conll2002', 'nltk.corpus.words', 'nltk.parse', 'nltk.ccg.lexicon.SEMANTICS_RE', 'nltk', 'nltk.translate.bleu_score.nltk.translate.bleu_score', 'nltk.parse', 'nltk.corpus.reader.xmldocs', 'nltk.draw.util.SymbolWidget', 'nltk.ccg.chart', 'nltk.util', 'nltk.classify.senna', 'nltk.draw.util', 'nltk.lm.util', 'nltk.corpus.brown', 'nltk.corpus.reader.util', 'nltk.bleu', 'nltk.tag.brill', 'nltk.data', 'nltk.tbl.feature', 'nltk.corpus.brown', 'nltk.sem.logic', 'nltk.util', 'nltk.probability', 'nltk.inference.api', 'nltk.ccg.chart', 'nltk.corpus.indian', 'nltk.sentiment.vader', 'nltk.translate.StackDecoder', 'nltk.corpus.europarl_raw', 'nltk', 'nltk.translate', 'nltk.sem.logic', 'nltk.sem.linearlogic', 'nltk.cluster.util', 'nltk.test', 'nltk.corpus.mac_morpho', 'nltk.util', 'nltk.cluster', 'nltk.compat', 'nltk.corpus.semcor', 'nltk.sem.logic', 'nltk.align', 'nltk.sem.logic', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.corpus.conll2000', 'nltk.corpus.stopwords', 'nltk.corpus', 'nltk.book', 'nltk.corpus.treebank', 'nltk.util.ngrams', 'nltk.classify.tadm', 'nltk.sem.logic', 'nltk.corpus.wordnet', 'nltk.corpus.reader.pl196x', 'nltk.sentiment.util', 'nltk.chunk.regexp', 'nltk.test', 'nltk.corpus.reader.api.SyntaxCorpusReader', 'nltk.ccg.lexicon', 'nltk.corpus.gutenberg', 'nltk.tokenize', 'nltk.probability', 'nltk.classify', 'nltk.probability', 'nltk.tokenize.mwe.MWETokenizer', 'nltk.draw', 'nltk.tag.stanford', 'nltk.stem', 'nltk.tokenize', 'nltk.corpus.reader.wordnet', 'nltk.corpus.names', 'nltk.tokenize.punkt.PunktLanguageVars', 'nltk.corpus', 'nltk', 'nltk.corpus.reader.nombank', 'nltk.classify.tadm', 'nltk.corpus', 'nltk.corpus.conll2002', 'nltk.compat', 'nltk.twitter', 'nltk.corpus.util', 'nltk.classify.textcat', 'nltk.stem.porter', 'nltk.compat', 'nltk.corpus.names', 'nltk.corpus.reuters', 'nltk.align.ibm1', 'nltk.sem.logic', 'nltk.corpus.reader.wordnet', 'nltk.sem.cooper_storage', 'nltk.test', 'nltk.corpus.words', 'nltk.tokenize', 'nltk', 'nltk.sem.logic', 'nltk.tree.Tree', 'nltk.corpus.nps_chat', 'nltk.lm', 'nltk.collocations', 'nltk.corpus.propbank', 'nltk.re', 'nltk.stem', 'nltk.compat.htmlentitydefs.name2codepoint', 'nltk.corpus.timit', 'nltk.sem.logic', 'nltk.compat', 'nltk.tree', 'nltk.parse.dependencygraph', 'nltk.tokenize', 'nltk.parse', 'nltk', 'nltk.ccg.lexicon.CCGVar', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.book.text1', 'nltk.ccg.combinator', 'nltk.tokenize.treebank', 'nltk.corpus.indian', 'nltk.corpus.brown', 'nltk.corpus.reader.util.StreamBackedCorpusView', 'nltk.Tree', 'nltk.corpus', 'nltk.translate', 'nltk.corpus.gutenberg', 'nltk.parse.featurechart', 'nltk.featstruct', 'nltk.lm', 'nltk.corpus.reader.api.CorpusReader', 'nltk.tag', 'nltk.corpus.udhr2', 'nltk.corpus.subjectivity', 'nltk.tokenize', 'nltk.chunk.named_entity', 'nltk.parse', 'nltk.corpus.subjectivity', 'nltk.translate.ribes_score', 'nltk.compat', 'nltk.corpus.reader.util', 'nltk.corpus.conll2002', 'nltk.metrics.scores', 'nltk.parse.chart', 'nltk.chunk.regexp', 'nltk.chunk', 'nltk', 'nltk.classify', 'nltk', 'nltk.corpus.lin_thesaurus', 'nltk.tokenize.casual', 'nltk.corpus.wordnet', 'nltk.corpus.semcor', 'nltk', 'nltk.sem.linearlogic', 'nltk.internals', 'nltk.corpus.stopwords', 'nltk.corpus.cess_cat', 'nltk.parse.chart', 'nltk', 'nltk.corpus', 'nltk.classify', 'nltk.corpus.brown', 'nltk.treetransforms', 'nltk.corpus.reader', 'nltk.corpus.state_union', 'nltk.corpus.treebank', 'nltk.jsontags', 'nltk', 'nltk.twitter.common', 'nltk.parse.chart', 'nltk.translate', 'nltk.parse.chart', 'nltk.probability', 'nltk.featstruct', 'nltk.corpus.wordnet', 'nltk.lm', 'nltk.parse', 'nltk.book', 'nltk.sem', 'nltk.stem', 'nltk.sem.logic', 'nltk.draw.tree', 'nltk.corpus.nps_chat', 'nltk.book.text1', 'nltk.cfg', 'nltk.corpus.words', 'nltk.re', 'nltk.draw.util', 'nltk.compat.htmlentitydefs', 'nltk.re', 'nltk.classify', 'nltk.corpus.verbnet', 'nltk', 'nltk.corpus.alpino', 'nltk.sem.logic', 'nltk', 'nltk.tokenize.casual', 'nltk.jsontags', 'nltk.lm.models', 'nltk.corpus.wordnet', 'nltk.tokenize.treebank', 'nltk.tree', 'nltk.stem.cistem.Cistem', 'nltk.parse', 'nltk.corpus.reader', 'nltk.tokenize.sexpr.SExprTokenizer', 'nltk.parse', 'nltk.tokenize', 'nltk.tag', 'nltk.sem.linearlogic', 'nltk.tokenize.treebank.TreebankWordTokenizer', 'nltk.tokenize.RegexpTokenizer', 'nltk.sem.logic', 'nltk.corpus', 'nltk.corpus', 'nltk.corpus.comtrans', 'nltk.compat', 'nltk.stem', 'nltk.util', 'nltk.translate.bleu_score', 'nltk.corpus.abc', 'nltk', 'nltk.corpus.wordnet', 'nltk.corpus.mac_morpho', 'nltk', 'nltk', 'nltk.corpus.brown', 'nltk.tag.sequential', 'nltk.chunk', 'nltk.corpus.reader.xmldocs.XMLCorpusReader', 'nltk.re', 'nltk.sem.logic', 'nltk.corpus.reader', 'nltk.util', 'nltk.corpus.semcor', 'nltk.translate', 'nltk.tag', 'nltk.Tree', 'nltk.chunk', 'nltk.tokenize.casual', 'nltk.corpus.reader.wordnet', 'nltk.draw', 'nltk.stem', 'nltk', 'nltk.parse', 'nltk.parse', 'nltk.compat', 'nltk.translate', 'nltk.tag.stanford', 'nltk.corpus.reader', 'nltk.draw.util.CanvasWidget', 'nltk.ccg.lexicon', 'nltk.classify', 'nltk.book', 'nltk.compat', 'nltk.parse.chart', 'nltk.parse.chart.TreeEdge', 'nltk.tbl', 'nltk', 'nltk.parse.stanford', 'nltk.sem.logic', 'nltk.grammar.DependencyGrammar', 'nltk.tree', 'nltk.cfg.CFG', 'nltk.metrics.distance', 'nltk.data', 'nltk.stem.util', 'nltk.corpus.framenet', 'nltk.collocations', 'nltk.tag.perceptron', 'nltk.sem.drt', 'nltk', 'nltk.twitter', 'nltk.corpus.reader', 'nltk.sem.logic.operator', 'nltk.cluster.util.VectorSpaceClusterer', 'nltk.tag.brill', 'nltk.tokenizer', 'nltk.tag.tnt.TnT', 'nltk.classify.naivebayes.NaiveBayesClassifier', 'nltk.tbl', 'nltk.tag.mapping', 'nltk.grammar', 'nltk.corpus.verbnet', 'nltk.data', 'nltk.chunk', 'nltk.stem.snowball', 'nltk.tag.brill', 'nltk.corpus.framenet', 'nltk.parse.chart', 'nltk', 'nltk.corpus.reader.api', 'nltk.tag', 'nltk.tree.tree.Tree', 'nltk.compat', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.sem.logic', 'nltk.sem.drt.DrtTokens', 'nltk.lm.smoothing', 'nltk.book', 'nltk.corpus', 'nltk.stem.isri.ISRIStemmer', 'nltk.chat', 'nltk.corpus.wordnet.wordnet_util', 'nltk.translate', 'nltk.corpus.timit', 'nltk.collocations', 'nltk.corpus', 'nltk.classify', 'nltk.corpus.movie_reviews', 'nltk.chunk', 'nltk.sem.logic', 'nltk.cfg', 'nltk.corpus.opinion_lexicon', 'nltk.corpus.verbnet', 'nltk.corpus', 'nltk.app', 'nltk.corpus.abc', 'nltk.twitter.util', 'nltk.parse.generate', 'nltk.maxent.ConditionalExponentialClassifier', 'nltk.chat.eliza.eliza_chatbot', 'nltk.corpus.reader', 'nltk.corpus.wordnet.wordnet_util', 'nltk.corpus.reuters', 'nltk.tag', 'nltk', 'nltk.chunk.util', 'nltk.internals', 'nltk.corpus.framenet', 'nltk.corpus.reader.conll.ConllCorpusReader', 'nltk.tokenize', 'nltk.tag', 'nltk.classify', 'nltk.grammar', 'nltk.ccg.lexicon', 'nltk.tbl', 'nltk', 'nltk.util', 'nltk.tag.hmm', 'nltk.tag.brill', 'nltk.corpus.treebank_chunk', 'nltk', 'nltk.metrics', 'nltk.grammar.FeatureGrammar', 'nltk.downloader', 'nltk', 'nltk.internals', 'nltk.tree.ImmutableTree', 'nltk.FreqDist', 'nltk.app', 'nltk.corpus', 'nltk.draw.tree', 'nltk.probability', 'nltk.corpus', 'nltk.corpus.reader.wordnet', 'nltk.stem.wordnet', 'nltk.decorators', 'nltk.translate.ibm_model', 'nltk.inference.prover9', 'nltk.corpus', 'nltk.chunk.regexp.RegexpChunkRule', 'nltk.parse', 'nltk.sentiment.util', 'nltk.collocations.BigramAssocMeasures', 'nltk.tag', 'nltk.grammar', 'nltk.corpus.names', 'nltk.draw.tree', 'nltk.parse.util', 'nltk.classify.svm', 'nltk.corpus.toolbox', 'nltk.sem.logic.ANY_TYPE', 'nltk.tag.hunpos', 'nltk.draw', 'nltk.collocations', 'nltk', 'nltk.ccg.lexicon', 'nltk.corpus.cess_esp', 'nltk.corpus.floresta', 'nltk.classify', 'nltk', 'nltk.corpus.reader.ChunkedCorpusReader', 'nltk.ccg.combinator', 'nltk.tag', 'nltk.parse.chart', 'nltk.corpus.movie_reviews', 'nltk.corpus.sentiwordnet', 'nltk.corpus.stopwords', 'nltk.probability.LaplaceProbDist', 'nltk', 'nltk.tokenize.regexp', 'nltk.corpus.inaugural', 'nltk.corpus.reader.util', 'nltk.corpus.reader.util', 'nltk.sem.logic', 'nltk.corpus.treebank', 'nltk.ccg.lexicon', 'nltk.corpus.verbnet', 'nltk', 'nltk.parse.stanford', 'nltk.corpus.reader.ConllCorpusReader', 'nltk.compat', 'nltk.model', 'nltk.metrics.TrigramAssocMeasures', 'nltk', 'nltk.compat', 'nltk.parse.chart.TreeEdge', 'nltk.tokenize', 'nltk.cluster.em', 'nltk.corpus.nombank', 'nltk.help', 'nltk.metrics.scores', 'nltk.compat', 'nltk.corpus.reader.tagged.TaggedCorpusReader', 'nltk.corpus.opinion_lexicon', 'nltk.draw.util.CanvasWidget', 'nltk.inference', 'nltk.corpus.framenet', 'nltk.compat', 'nltk.Tree', 'nltk.translate.ibm1', 'nltk.tag.sequential', 'nltk.corpus.inaugural', 'nltk.compat', 'nltk.tag.sequential', 'nltk.tag.stanford', 'nltk.util', 'nltk.chat.zen', 'nltk', 'nltk.parser.stanford', 'nltk.tree', 'nltk.corpus.wordnet', 'nltk.translate.bleu_score', 'nltk.probability', 'nltk.corpus.reader.dependency', 'nltk.token'];

let values = [366, 4, 23, 20, 11, 1, 16, 2, 100, 25, 89, 25, 3, 14, 406, 27, 26, 1, 52, 28, 25, 25, 5, 20, 3, 25, 188, 25, 3, 1, 160, 124, 5, 110, 28, 1, 1, 10, 438, 1, 1710, 14, 7, 3, 1, 25, 1, 606, 2, 18, 171, 32, 1, 183, 104, 2, 1, 2, 115, 104, 65, 23, 2, 11, 28, 74, 804, 23, 3, 14, 30, 12, 8, 24, 22, 70, 1, 433, 1, 5, 1, 19, 423, 30, 14, 2, 3, 14, 10, 5, 11, 55, 1, 31, 102, 76, 3, 1, 1, 1, 1, 14, 7, 3, 25, 301, 2, 2, 14, 22, 15, 14, 6, 3, 225, 126, 1, 1, 49, 4, 4, 12, 14, 54, 3, 30, 25, 1, 3, 15, 29, 1, 4, 142, 215, 1, 5, 28, 1, 24, 3, 25, 2, 9, 24, 532, 50, 4, 8, 4, 40, 4, 35, 4, 186, 98, 28, 77, 56, 10, 7, 1, 1, 25, 25, 24, 1, 6, 215, 281, 25, 25, 15, 1, 1, 19, 39, 49, 498, 457, 1, 82, 43, 5, 25, 75, 32, 916, 3, 21, 1, 1, 84, 1, 1, 12, 48, 30, 33, 40, 44, 10, 2, 7, 2, 25, 74, 25, 2, 1, 11, 51, 25, 88, 7, 31, 3, 76, 21, 22, 74, 17, 2, 1, 2, 1, 11, 177, 2, 14, 122, 14, 1, 25, 2, 2, 1, 129, 80, 3, 161, 7, 2, 26, 8, 1, 26, 1, 4197, 162, 55, 54, 24, 38, 2587, 2, 1, 1, 11, 1, 233, 26, 25, 9, 3, 2, 36, 2, 96, 34, 1, 2, 35, 50, 18, 3, 41, 2, 21, 6, 4, 3, 5471, 104, 72, 8, 1, 76, 1, 1, 1, 331, 1, 4, 1, 1, 19, 25, 4, 37, 27, 15, 37, 1, 14, 214, 2, 4, 2216, 403, 12, 1, 26, 25, 1, 1, 106, 17, 23, 1421, 37, 4, 6, 1, 26, 106, 623, 8, 2, 25, 63, 8, 1, 186, 3735, 1, 169, 16, 8, 2, 2, 2, 1, 6, 4, 3, 1, 2, 30, 5, 2, 26, 1, 153, 13, 14, 39, 76, 36, 11, 50, 53, 23, 1, 2, 1, 74, 396, 37, 23, 125, 4, 320, 30, 27, 6, 15, 144, 6, 2, 45, 38, 2, 12, 7, 4, 1, 214, 23, 2, 1, 37, 1405, 2, 1, 1, 4, 159, 14, 10, 2, 85, 2, 755, 49, 3, 1, 484, 1, 1, 1, 24, 97, 1, 44, 23, 2, 2370, 26, 1, 32, 1, 22, 24, 25, 1, 25, 49, 13, 1, 2, 42, 7, 10, 1, 83, 36, 1, 1, 2, 1, 111, 1, 1, 1, 25, 42, 194, 1, 33, 2, 1, 25, 22, 1, 7, 50, 553, 2, 33, 1, 6, 22, 156, 11, 25, 45, 40, 375, 3, 23, 140, 23, 6, 26, 3, 28, 3, 1, 1, 29, 5, 2, 186, 9, 96, 4, 419, 114, 2, 1, 15, 37, 28, 45, 119, 295, 1, 24, 1065, 5, 1, 25, 1, 25, 29, 21, 21, 139, 1, 125, 1, 3, 2, 35, 2, 1, 1, 552, 134, 3, 1, 176, 1, 1, 264, 29, 101, 2, 1, 1, 53, 3, 7, 1, 358, 5, 64, 62, 392, 51, 8, 61, 25, 12, 2, 4, 25, 24, 205, 2295, 3058, 24, 4, 25, 1, 28, 38, 50, 551, 27, 239, 72, 2, 13, 26, 2, 23, 186, 25, 17, 4, 4, 29, 3, 1, 1, 3117, 420, 22, 5410, 125, 11, 3, 22, 27, 4, 22, 627, 25, 4, 19, 21, 1, 2, 2, 23, 43, 184, 3, 2, 24, 2, 2, 1, 27, 27, 1, 1, 1, 1122, 17, 11, 6, 25, 20, 13, 39, 5, 1477, 142, 68, 117, 25, 24, 3, 2, 38, 1, 26, 24, 2295, 1, 1, 25, 2, 3, 2, 28, 562, 391, 19, 2, 19, 25, 40, 392, 10, 74, 1, 25, 1, 27, 74, 32, 13, 9, 25, 20, 23, 678, 86, 2, 1, 25, 9, 8, 110, 2, 7, 622, 175, 53, 12, 2, 46, 29, 1, 10, 26, 3044, 31, 587, 6, 142, 53, 27, 24, 4, 216, 23, 1, 28, 105, 1, 50, 136, 330, 32, 25, 67, 1, 3, 1, 1, 6, 4, 1, 50, 36, 3, 1, 136, 2, 53, 219, 50, 3, 36, 19, 1, 3, 21, 938, 138, 20, 1, 3, 1, 7, 7, 4, 2, 52, 94, 5, 50, 62, 50, 155, 1, 1, 25, 72, 1, 86, 1, 302, 26, 12, 12, 498, 37, 2587, 4, 1, 23, 640, 1, 840, 1, 171, 23, 3, 94, 21, 3, 21, 2, 1, 2, 3, 1, 222, 1, 2, 1, 1, 3, 1, 92, 31, 44, 27, 2, 2, 1, 22, 1, 1465, 161, 24, 2, 1, 74, 8, 2, 6, 4, 1, 193, 1, 27, 51, 1, 1, 58, 4, 2, 25, 116, 25, 8, 13, 1, 11, 2, 1, 3, 1, 4, 2, 2827, 1, 42, 28, 4, 1, 40, 3, 1, 1, 397, 2, 2, 31, 120, 1, 6, 12, 33, 2, 23, 13, 73, 2, 1, 1643, 1, 4, 56, 127, 4, 1, 1, 160, 82, 6, 2, 110, 3255, 38, 6, 3, 3, 39, 74, 7, 10, 1, 2, 150, 2, 1, 2, 1, 283, 147, 36, 21, 47, 1, 1, 1, 9273, 36, 24, 1, 87, 1, 14, 4, 79, 14, 11, 1, 5, 1, 9, 1, 400, 5, 34, 9, 104, 65, 1, 24, 368, 38, 144, 14, 13, 31, 19, 14, 2, 1, 1, 1, 100, 1, 2, 1, 2, 28, 119, 50, 22, 32, 1, 1, 47, 1, 1, 33, 6, 9, 1, 1, 135, 3, 25, 34, 135, 43, 111664, 3, 1, 9, 28, 579, 170, 23, 266, 451, 38, 42, 25, 1, 1, 2, 1, 25, 55, 25, 42, 14, 2, 1, 488, 36, 4, 2, 44, 25, 26, 69, 8, 92, 1364, 1, 25, 3, 242, 172, 8, 5, 25, 320, 34, 1, 1, 24, 6, 1, 1, 1, 82, 23, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 4, 90, 2, 1, 31, 23, 2087, 1, 9, 26, 3, 151, 3, 9, 1, 1, 992, 1, 353, 14, 2, 3, 1, 13, 34, 19, 36, 12, 5, 25, 3, 10, 145, 2, 16, 14, 17, 281, 44, 2, 2, 6, 44, 7, 4, 5, 2, 3, 1, 23, 532, 2, 66, 153, 3, 3, 1, 1, 1, 4, 24, 2, 1, 1, 12, 62, 13, 25, 8, 1, 165, 1, 7, 44, 24, 68, 9, 1, 1, 155, 21, 25, 6, 121, 2, 4, 165, 15, 28, 1, 1, 1, 7, 214, 1, 51, 16, 3080, 25392, 4, 4, 2, 2, 162, 1, 42, 1, 1, 10, 24, 1, 49, 3, 1, 1, 28, 1, 25, 562, 1, 115, 52, 25, 1, 3, 6, 48, 5, 25, 5, 9, 247, 9, 25, 273, 27, 2, 28, 1, 48, 81, 8, 50, 33, 23, 1, 37, 26, 32, 1, 13, 4, 1, 3, 24, 295, 120, 1, 29, 5, 2, 230, 4, 1, 30, 12, 88, 23, 5, 4, 1, 1, 1, 25, 196, 225, 15, 4, 27, 161, 25, 7, 4, 2, 25, 1, 52, 62, 25, 23, 181, 36, 133, 1, 25, 23, 54, 1, 25, 1, 6, 35, 3, 1, 50, 678, 148, 3, 1, 14, 2, 22, 80, 419, 15, 24, 1, 157, 1, 98, 21, 5, 2, 20, 2, 242, 314, 3, 670, 22, 13, 25, 36, 158, 1, 118, 44, 3, 23, 1, 4746, 1, 23, 1, 47, 23, 648, 38, 3, 24, 19, 32, 28, 76, 222, 1, 12, 1, 49, 180, 5428, 51, 2, 12, 1, 10, 3, 2, 22, 56, 1, 75, 3, 1, 41, 1, 28, 2, 74, 24, 4, 32, 4, 1, 121, 89, 8, 25, 4, 57, 81, 1, 44, 1, 50, 8, 121, 48, 1, 23, 19, 170, 22, 5, 1, 3770, 68, 1, 2, 1, 53, 61, 19, 2, 25, 7, 4, 10, 30, 44, 4, 4, 2, 37, 1, 245, 1, 36, 1, 2, 5, 17, 1, 2, 42, 127, 22, 24, 1, 56, 31, 2, 2, 2, 1, 21, 39, 29, 2, 1, 23, 24, 3, 23, 5, 79, 484, 24, 5, 48, 1, 1, 72, 24, 2, 55, 4, 31, 1, 25, 4, 47, 26, 1, 2, 12, 4, 18, 114, 4, 1, 6, 367, 25, 14, 10304, 53, 29, 6, 3, 2, 1, 4, 75, 3, 1, 4, 1, 226, 36, 77, 1, 17, 14, 1, 62, 3, 1, 638, 41, 1342, 6, 30, 6, 2, 9540, 26, 21, 6, 1, 53, 18, 23, 2, 26, 2, 22, 23, 2, 5, 79, 62, 28, 1, 1, 235, 16, 6, 2, 23, 183, 51, 2, 1, 15, 25, 256, 2, 24, 6, 2, 2, 147, 4, 2, 13, 9, 173, 229, 8, 5, 2, 1, 87, 727, 104, 26, 4, 85, 1, 36, 65, 13, 1270, 8, 1, 31, 72, 1, 5, 12, 8, 59, 11, 39, 34, 10, 29, 312, 35, 5, 2, 25, 1, 391, 117, 25, 74, 210, 14, 23, 3, 2, 2, 23, 26, 21, 20, 25, 7, 2, 22, 1, 1, 1, 10, 3, 79, 1, 6, 30, 13, 1701, 125, 90, 25, 25, 1, 2, 1, 23, 1, 122, 2, 1, 22, 19, 1, 1, 1, 48, 1739, 26, 2, 1, 7, 1, 13, 1, 1, 120, 2, 41, 1, 36, 364, 48, 1, 75, 1, 48, 8, 285, 25, 1, 1, 614, 46, 7, 53, 3, 225, 148, 3, 1, 1, 21, 11, 64, 40, 150, 24, 33, 13, 28, 23, 25, 26, 8, 211, 2, 100, 1, 6, 2, 4, 8, 79, 1, 26, 25, 23, 4, 4, 26, 3, 2, 2, 96, 3, 1, 2, 54, 1, 1, 10, 1905, 11499, 24, 2, 1, 46, 5, 1, 26, 654, 5, 28, 26, 116, 4, 3044, 14, 1, 34, 2, 161, 624, 28, 3, 1, 11, 2, 2, 39, 28, 8, 55, 2, 8, 4, 12, 2, 25, 23, 78, 272, 176, 2, 1, 2, 1, 1, 25, 1, 25, 94, 60, 4, 1, 66, 1, 25, 25, 3, 23, 2, 1, 3, 116, 25, 1, 34, 4, 13, 5, 2, 100, 25, 2, 111, 1, 1, 8, 26, 44, 1, 2, 43, 24, 23, 41, 48, 25, 452, 23, 2, 6, 63, 36, 12, 26, 4, 21305, 23, 76, 2, 25, 27, 3, 1, 51, 63, 7, 2, 8, 36, 25, 84, 1, 3, 9, 2, 37, 14, 3, 46, 2, 68, 25, 186, 1, 3, 74, 1, 2, 438, 6, 1, 5, 1, 1, 1, 3984, 2, 24, 1, 3, 25, 73, 136, 13, 52, 173, 13, 2, 9, 3736, 3, 31, 9, 23, 1, 188, 292, 23, 13, 247, 132, 37, 2, 1, 108, 1, 363, 5, 514, 102, 5, 1, 309, 104, 59, 346, 12, 1, 37, 4, 19, 6, 182, 74, 20, 23, 2, 72, 8, 58, 1, 3, 8, 1, 11, 28, 7, 2, 74, 2693, 24, 4, 25, 73, 4, 3, 1, 631, 46, 264, 58, 4, 115, 6, 15, 4, 1, 146, 90, 40, 269, 2, 14, 1, 27, 25, 8, 13, 286, 1, 1, 2, 9, 2, 5, 142, 1, 235, 26, 20, 3, 45, 2, 1, 1, 4, 48, 32, 1, 1, 2, 2, 4, 305, 1, 1, 118, 12, 5, 5, 4, 34, 65, 2, 9, 2, 3, 1, 47, 29, 163, 200, 77, 1, 1, 13, 24, 1, 2, 30, 2, 89, 4, 4, 3735, 1, 110, 25, 7, 1, 135, 10, 1, 213, 27, 16, 121, 1, 2, 6, 2, 1, 1, 2, 14, 2, 1, 4, 3, 6, 1, 25, 2, 3, 211, 2, 5, 1, 121, 175, 21, 22, 160, 63, 24, 19, 7, 1, 1, 1, 42, 10, 7, 2, 14, 1, 225, 1, 7, 1, 101, 41, 58, 4, 37, 322, 13, 203, 1, 1, 10, 2, 14, 16, 5, 26, 1, 5964, 1, 1, 15, 2, 1919, 2, 9];

export { ids, labels, parents, values };